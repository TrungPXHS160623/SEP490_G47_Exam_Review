// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20241013074201_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(766),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(785)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(789),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(790)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(792),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(794)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(796),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(797)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(800),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(801)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2013),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2012),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2008),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2011),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2015)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2023),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2022),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2020),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2021),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2024)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2033),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2030),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2028),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2029),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2034)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2039),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2038),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2037),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2040)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2047),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2046),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2045),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2048)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2055),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2053),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2052),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2056)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2061),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2060),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2059),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2062)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2068),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2067),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2066),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2069)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2077),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2075),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2074),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2078)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2083),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2082),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2081),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2084)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2090),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2090),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2088),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2089),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2091)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2098),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2097),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2095),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Reading",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2096),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2098)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2106),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2105),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2103),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Writing",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2104),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2107)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2113),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2113),
                            EstimatedTimeTest = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2111),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Listening",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2112),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2115)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2121),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2120),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2119),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2122)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2128),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2127),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2126),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2129)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2136),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2135),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2134),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2137)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2143),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2142),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2141),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2144)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2149),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2148),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2147),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2150)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2156),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2155),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2154),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2157)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2245),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2244),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2243),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2246)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2252),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2251),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2250),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2253)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1118),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1120)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1123),
                            StatusContent = "Waiting To Assign",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1124)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1201),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1202)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1205),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1206)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1208),
                            StatusContent = "Exam With Errors",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1209)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1212),
                            StatusContent = "Faultless Exam",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1213)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1215),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1216)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2318),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2322),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2324)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2328),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2330),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2331)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2333),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2334),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2335)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2337),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2339),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2340)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2342),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2343),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2344)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2346),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2347),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2348)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2350),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2351),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2352)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2354),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2356),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2356)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2359),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2360),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2361)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2364),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2365),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2366)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2368),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2370),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2371)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2373),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2374),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2375)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2377),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2378),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2379)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2381),
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2383),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2384)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2438),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2439)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2442),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2443)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2445),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2446)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2448),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2449)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2451),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2452)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2455),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2456)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2458),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2459)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2461),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2462)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2464),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2465)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2467),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2468)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2470),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2471)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2473),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2474)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2476),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2477)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2524),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2525)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2528),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2529)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2532),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2533)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2534),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2535)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2537),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2538)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2541),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2542)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2544),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2545)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2547),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2548)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2549),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2551)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2553),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2554)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2556),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2556)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2558),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2559)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2561),
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2562)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            AssignmentId = 8,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2613),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2614)
                        },
                        new
                        {
                            ReportId = 2,
                            AssignmentId = 9,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2618),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2619)
                        },
                        new
                        {
                            ReportId = 3,
                            AssignmentId = 11,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2622),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2623)
                        },
                        new
                        {
                            ReportId = 4,
                            AssignmentId = 12,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2626),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2628)
                        },
                        new
                        {
                            ReportId = 5,
                            AssignmentId = 13,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2690),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2691)
                        },
                        new
                        {
                            ReportId = 6,
                            AssignmentId = 14,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2695),
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(2696)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1556),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1557)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1560),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1561)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1564),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1565)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1567),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1568)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1630),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1632)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1634),
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1635)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1638),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1639)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1641),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1642)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1644),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1645)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1647),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1648)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1328),
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1330)
                        },
                        new
                        {
                            UserId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1334),
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1335)
                        },
                        new
                        {
                            UserId = 3,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1339),
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1340)
                        },
                        new
                        {
                            UserId = 4,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1344),
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1345)
                        },
                        new
                        {
                            UserId = 5,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1349),
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1351)
                        },
                        new
                        {
                            UserId = 6,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1355),
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1356)
                        },
                        new
                        {
                            UserId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1363),
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1365)
                        },
                        new
                        {
                            UserId = 8,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1370),
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1371)
                        },
                        new
                        {
                            UserId = 9,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1374),
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1375)
                        },
                        new
                        {
                            UserId = 10,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1378),
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1379)
                        },
                        new
                        {
                            UserId = 11,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1383),
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1384)
                        },
                        new
                        {
                            UserId = 27,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1389),
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1390)
                        },
                        new
                        {
                            UserId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1397),
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1399)
                        },
                        new
                        {
                            UserId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1404),
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1405)
                        },
                        new
                        {
                            UserId = 14,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1408),
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1410)
                        },
                        new
                        {
                            UserId = 15,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1414),
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1415)
                        },
                        new
                        {
                            UserId = 16,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1420),
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1422)
                        },
                        new
                        {
                            UserId = 17,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1427),
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1428)
                        },
                        new
                        {
                            UserId = 18,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1431),
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1432)
                        },
                        new
                        {
                            UserId = 19,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1436),
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1437)
                        },
                        new
                        {
                            UserId = 20,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1441),
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1442)
                        },
                        new
                        {
                            UserId = 21,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1446),
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1447)
                        },
                        new
                        {
                            UserId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1456),
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1457)
                        },
                        new
                        {
                            UserId = 23,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1460),
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1461)
                        },
                        new
                        {
                            UserId = 24,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1464),
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1465)
                        },
                        new
                        {
                            UserId = 25,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1469),
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1469)
                        },
                        new
                        {
                            UserId = 26,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1473),
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1474)
                        },
                        new
                        {
                            UserId = 28,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1477),
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1478)
                        },
                        new
                        {
                            UserId = 29,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1481),
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1482)
                        },
                        new
                        {
                            UserId = 30,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1485),
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1486)
                        },
                        new
                        {
                            UserId = 31,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1489),
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1490)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1267),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1268)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1272),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1273)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1276),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1277)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1279),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1280)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1283),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 13, 14, 41, 59, 555, DateTimeKind.Local).AddTicks(1284)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignment")
                        .WithMany("Reports")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
