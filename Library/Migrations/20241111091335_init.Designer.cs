// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20241111091335_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4431),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4453)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4458),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4459)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4462),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4463)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4467),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4468)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4611),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(4612)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserFaculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserFaculty_CampusId");

                    b.HasIndex(new[] { "FacultyId" }, "IX_CampusUserFaculty_FacultyId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserFaculty_UserId");

                    b.ToTable("CampusUserFaculty", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6279),
                            FacultyId = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6283),
                            FacultyId = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6285),
                            FacultyId = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6287),
                            FacultyId = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6289),
                            FacultyId = 5,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            SubjectId = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            SubjectId = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            SubjectId = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            SubjectId = 6,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            SubjectId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            SubjectId = 8,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GeneralFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsReady")
                        .HasColumnType("bit");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("TermDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_Exams_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6341),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 4,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 1,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6342)
                        },
                        new
                        {
                            ExamId = 2,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6351),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 4,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 1,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6352)
                        },
                        new
                        {
                            ExamId = 3,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6368),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "OK.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 2,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6369)
                        },
                        new
                        {
                            ExamId = 4,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6377),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "OK.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 2,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6378)
                        },
                        new
                        {
                            ExamId = 5,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6386),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "The exam can be used for testing.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 3,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6388)
                        },
                        new
                        {
                            ExamId = 6,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6396),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "The exam can be used for testing.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 3,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6397)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6404),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6402),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6401),
                            SubjectId = 4,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6405)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6412),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6411),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6410),
                            SubjectId = 4,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6413)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6419),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 2,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 5,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6420)
                        },
                        new
                        {
                            ExamId = 10,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6428),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 3,
                            ExamType = "Multiple Choice",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 5,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6429)
                        },
                        new
                        {
                            ExamId = 11,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6437),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 4,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6438)
                        },
                        new
                        {
                            ExamId = 12,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6445),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "30'",
                            ExamStatusId = 4,
                            ExamType = "Reading",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6446)
                        },
                        new
                        {
                            ExamId = 13,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6454),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 4,
                            ExamType = "Writing",
                            GeneralFeedback = "This exam covers the material from Block 10..",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6455)
                        },
                        new
                        {
                            ExamId = 14,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6853),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "30'",
                            ExamStatusId = 4,
                            ExamType = "Listening",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6855)
                        },
                        new
                        {
                            ExamId = 15,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6866),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "OK.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 7,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6866)
                        },
                        new
                        {
                            ExamId = 16,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6874),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "OK.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 7,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6875)
                        },
                        new
                        {
                            ExamId = 17,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6882),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "The exam can be used for testing.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 8,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6884)
                        },
                        new
                        {
                            ExamId = 18,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6891),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTimeTest = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "The exam can be used for testing.",
                            IsReady = true,
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 8,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6892)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6899),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6898),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6897),
                            SubjectId = 9,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6900)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6907),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6905),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6904),
                            SubjectId = 9,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6908)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6915),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6914),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6913),
                            SubjectId = 10,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6916)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6984),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6983),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDate = new DateTime(2024, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60'",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6982),
                            SubjectId = 10,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6985)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5015),
                            StatusContent = "Unassigned",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5018)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5021),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5022)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5024),
                            StatusContent = "Awaiting Lecturer Confirm",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5026)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5028),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5029)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5031),
                            StatusContent = "Error",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5032)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5033),
                            StatusContent = "OK",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5035)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5037),
                            StatusContent = "Completed",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5037)
                        },
                        new
                        {
                            ExamStatusId = 8,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5039),
                            StatusContent = "Rejected",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5040)
                        });
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5097),
                            Description = "The study and creation of systems that can perform tasks requiring human-like intelligence, such as learning and problem-solving.",
                            FacultyName = "Artificial Intelligence",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5098)
                        },
                        new
                        {
                            FacultyId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5101),
                            Description = "A field focusing on core skills in business, law, operations, and communication for professional success.",
                            FacultyName = "BLOC",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5120)
                        },
                        new
                        {
                            FacultyId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5136),
                            Description = "The study of managing and overseeing business operations, including planning, organization, and leadership",
                            FacultyName = "Business Administration",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5138)
                        },
                        new
                        {
                            FacultyId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5140),
                            Description = "The study of the Chinese language, culture, and communication skills.",
                            FacultyName = "Chinese",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5141)
                        },
                        new
                        {
                            FacultyId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5143),
                            Description = "The study of computation, algorithms, programming, and the design of software and hardware systems.",
                            FacultyName = "Computer Science",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5144)
                        },
                        new
                        {
                            FacultyId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5147),
                            Description = "An introduction to core computing concepts, including basic programming, data processing, and system operations.",
                            FacultyName = "Computing Fundamental",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5148)
                        },
                        new
                        {
                            FacultyId = 7,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5150),
                            Description = "The study of the English language, including grammar, literature, and communication skills.",
                            FacultyName = "English",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5151)
                        },
                        new
                        {
                            FacultyId = 8,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5154),
                            Description = "A course designed to enhance language skills in reading, writing, speaking, and listening, preparing students for academic or professional English proficiency.",
                            FacultyName = "English Preparation Course",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5155)
                        },
                        new
                        {
                            FacultyId = 9,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5157),
                            Description = "Additional sessions designed to provide supplementary learning in various subjects to reinforce or expand students' knowledge and skills.",
                            FacultyName = "Extra Classes",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5158)
                        },
                        new
                        {
                            FacultyId = 10,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5161),
                            Description = "The study of managing money, investments, financial systems, and the principles of budgeting and financial decision-making.",
                            FacultyName = "Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5161)
                        },
                        new
                        {
                            FacultyId = 11,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5164),
                            Description = "A program or course designed for students who have completed an undergraduate degree, focusing on advanced studies and specialized knowledge in a particular field.",
                            FacultyName = "Graduate",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5165)
                        },
                        new
                        {
                            FacultyId = 12,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5167),
                            Description = "The art of creating visual content to communicate messages, combining elements like typography, images, and colors to design logos, advertisements, websites, and more.",
                            FacultyName = "Graphic Design",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5168)
                        },
                        new
                        {
                            FacultyId = 13,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5170),
                            Description = "The practice of protecting and managing information systems to ensure their confidentiality, integrity, and availability, focusing on risk management and security measures.",
                            FacultyName = "Information Assurance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5171)
                        },
                        new
                        {
                            FacultyId = 14,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5174),
                            Description = "A focused study of advanced topics in IT, such as network management, cybersecurity, software development, and database administration.",
                            FacultyName = "Information Technology Specialization",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5175)
                        },
                        new
                        {
                            FacultyId = 15,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5177),
                            Description = "The study of the Japanese language, including its grammar, vocabulary, writing systems, and cultural aspects.",
                            FacultyName = "Japanese",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5178)
                        },
                        new
                        {
                            FacultyId = 16,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5180),
                            Description = "The study of the Korean language, including its grammar, vocabulary, writing systems (Hangul), and cultural nuances.",
                            FacultyName = "Korean",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5181)
                        },
                        new
                        {
                            FacultyId = 17,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5183),
                            Description = "A practical learning environment where students conduct experiments, apply theoretical knowledge, and gain hands-on experience in various scientific or technical fields.",
                            FacultyName = "LAB",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5184)
                        },
                        new
                        {
                            FacultyId = 18,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5187),
                            Description = "A program or initiative that offers an immersive learning experience focused on British culture, language, and educational practices, often designed to enhance students' understanding of the UK.",
                            FacultyName = "Little UK",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5188)
                        },
                        new
                        {
                            FacultyId = 19,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5190),
                            Description = "The study of planning, organizing, and overseeing resources and processes to achieve organizational goals efficiently and effectively.",
                            FacultyName = "Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5191)
                        },
                        new
                        {
                            FacultyId = 20,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5193),
                            Description = "The study of numbers, quantities, shapes, and patterns, focusing on problem-solving, logic, and abstract reasoning.",
                            FacultyName = "Mathematics",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5194)
                        },
                        new
                        {
                            FacultyId = 21,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5197),
                            Description = "The study of using various media formats—such as text, audio, video, and graphics—to communicate information effectively across different platforms and technologies.",
                            FacultyName = "Multimedia Communications",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5197)
                        },
                        new
                        {
                            FacultyId = 22,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5201),
                            Description = "A practical learning process where employees acquire skills and knowledge by performing tasks and duties in a real work environment under the guidance of experienced colleagues or supervisors.",
                            FacultyName = "On the job training",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5202)
                        },
                        new
                        {
                            FacultyId = 23,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5204),
                            Description = "The application of mathematical models, statistical analysis, and optimization techniques to solve complex decision-making problems and improve efficiency in business, logistics, and other systems.",
                            FacultyName = "OR",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5205)
                        },
                        new
                        {
                            FacultyId = 24,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5207),
                            Description = "The practice of improving physical fitness and performance through exercises, workouts, and conditioning to enhance strength, endurance, and overall health.",
                            FacultyName = "Physical Training",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5208)
                        },
                        new
                        {
                            FacultyId = 25,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5211),
                            Description = "A leading enterprise resource planning (ERP) software that helps organizations manage business processes by integrating key functions like finance, supply chain, human resources, and customer relationships.",
                            FacultyName = "SAP",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5212)
                        },
                        new
                        {
                            FacultyId = 26,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5214),
                            Description = "Non-technical skills that relate to how individuals interact with others, such as communication, teamwork, problem-solving, adaptability, and leadership.",
                            FacultyName = "Soft Skill",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5215)
                        },
                        new
                        {
                            FacultyId = 27,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5217),
                            Description = "The application of engineering principles to the design, development, testing, and maintenance of software systems, ensuring they are efficient, reliable, and scalable.",
                            FacultyName = "Software Engineering",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5218)
                        },
                        new
                        {
                            FacultyId = 28,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5220),
                            Description = "A program or course focused on teaching the fundamentals of launching and managing a new business, including idea development, business planning, marketing, and financial management.",
                            FacultyName = "Start Your Business",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5221)
                        },
                        new
                        {
                            FacultyId = 29,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5223),
                            Description = "The study and practice of playing musical instruments that are indigenous to specific cultures, often passed down through generations, such as the violin, guitar, sitar, or drums.",
                            FacultyName = "Traditional Instrument",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5224)
                        },
                        new
                        {
                            FacultyId = 30,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5226),
                            Description = "The study of the Vietnamese language, including its grammar, vocabulary, pronunciation, and cultural context.",
                            FacultyName = "Vietnamese",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5227)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7079),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7080)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7083),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7084)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7086),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7087)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7089),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7090)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7092),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7093)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7096),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7097)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7099),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7100)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7102),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7104)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7106),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7107)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7110),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7111)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7113),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7114)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7116),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7117)
                        },
                        new
                        {
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7119),
                            MenuLink = "/Admin/SemesterManagement",
                            MenuName = "Semester Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7120)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7122),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7123)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7174),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7176)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7178),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7179)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7180),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7181)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7183),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7184)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7186),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7187)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7189),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7190)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7193),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7194)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7195),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7196)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7198),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7199)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7201),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7202)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7204),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7205)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7206),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7208)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7209),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7210)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7212),
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7213)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("ExamId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7270),
                            ExamId = 1,
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7272)
                        },
                        new
                        {
                            ReportId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7275),
                            ExamId = 2,
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7276)
                        },
                        new
                        {
                            ReportId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7280),
                            ExamId = 11,
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7281)
                        },
                        new
                        {
                            ReportId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7284),
                            ExamId = 12,
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7285)
                        },
                        new
                        {
                            ReportId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7288),
                            ExamId = 13,
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7289)
                        },
                        new
                        {
                            ReportId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7291),
                            ExamId = 14,
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7293)
                        });
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.HasIndex(new[] { "ReportId" }, "IX_ReportFiles_ReportId");

                    b.ToTable("ReportFiles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7351),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Sp24",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7352)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7356),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Su24",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7357)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7361),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa24",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(7362)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5700),
                            FacultyId = 1,
                            SubjectCode = "ADY201m",
                            SubjectName = "Data Science with Python & SQL",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5702)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5706),
                            FacultyId = 1,
                            SubjectCode = "AID301c",
                            SubjectName = "AI in Production",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5707)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5710),
                            FacultyId = 1,
                            SubjectCode = "AIE301m",
                            SubjectName = "AI for Trading",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5711)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5715),
                            FacultyId = 1,
                            SubjectCode = "AIG202c",
                            SubjectName = "Artificial Intelligence",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5716)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5719),
                            FacultyId = 1,
                            SubjectCode = "AIH301m",
                            SubjectName = "AI in Healthcare",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5720)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5723),
                            FacultyId = 1,
                            SubjectCode = "AIL303m",
                            SubjectName = "Machine Learning",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5723)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5726),
                            FacultyId = 1,
                            SubjectCode = "AIM301m",
                            SubjectName = "AI for Medicine",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5727)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5730),
                            FacultyId = 1,
                            SubjectCode = "ASR301c",
                            SubjectName = "AI for Scientific Research",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5731)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5734),
                            FacultyId = 1,
                            SubjectCode = "BDI301c",
                            SubjectName = "Big Data",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5735)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5738),
                            FacultyId = 1,
                            SubjectCode = "BDI302c",
                            SubjectName = "Big Data",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5739)
                        },
                        new
                        {
                            SubjectId = 11,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5741),
                            FacultyId = 1,
                            SubjectCode = "CPV301",
                            SubjectName = "Computer Vision",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5742)
                        },
                        new
                        {
                            SubjectId = 12,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5745),
                            FacultyId = 1,
                            SubjectCode = "DAP391m",
                            SubjectName = "AI-DS Project",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5746)
                        },
                        new
                        {
                            SubjectId = 13,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5749),
                            FacultyId = 1,
                            SubjectCode = "DAT301m",
                            SubjectName = "AI Development with TensorFlow",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5750)
                        },
                        new
                        {
                            SubjectId = 14,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5753),
                            FacultyId = 1,
                            SubjectCode = "DBM302m",
                            SubjectName = "Data Mining",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5754)
                        },
                        new
                        {
                            SubjectId = 15,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5757),
                            FacultyId = 1,
                            SubjectCode = "DPL301m",
                            SubjectName = "Deep Learing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5758)
                        },
                        new
                        {
                            SubjectId = 16,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5761),
                            FacultyId = 1,
                            SubjectCode = "DPL302m",
                            SubjectName = "Deep Learning",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5762)
                        },
                        new
                        {
                            SubjectId = 17,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5765),
                            FacultyId = 1,
                            SubjectCode = "DSR301m",
                            SubjectName = "Applied Data Science with R",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5766)
                        },
                        new
                        {
                            SubjectId = 18,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5769),
                            FacultyId = 1,
                            SubjectCode = "DWP301c",
                            SubjectName = "Web Development with Python",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5770)
                        },
                        new
                        {
                            SubjectId = 19,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5773),
                            FacultyId = 1,
                            SubjectCode = "NLP301c",
                            SubjectName = "Natural Language Processing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5774)
                        },
                        new
                        {
                            SubjectId = 20,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5776),
                            FacultyId = 1,
                            SubjectCode = "PRP201c",
                            SubjectName = "Python programming",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5777)
                        },
                        new
                        {
                            SubjectId = 21,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5780),
                            FacultyId = 1,
                            SubjectCode = "REL301m",
                            SubjectName = "Reinforcement Learning",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5781)
                        },
                        new
                        {
                            SubjectId = 22,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5784),
                            FacultyId = 2,
                            SubjectCode = "BDP306b",
                            SubjectName = "Final Project - Blockchain Development in Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5785)
                        },
                        new
                        {
                            SubjectId = 23,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5787),
                            FacultyId = 3,
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5788)
                        },
                        new
                        {
                            SubjectId = 24,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5791),
                            FacultyId = 3,
                            SubjectCode = "ACC302",
                            SubjectName = "Managerial Accounting",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5792)
                        },
                        new
                        {
                            SubjectId = 25,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5796),
                            FacultyId = 3,
                            SubjectCode = "ACC305",
                            SubjectName = "Financial Statement Analysis",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5797)
                        },
                        new
                        {
                            SubjectId = 26,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5799),
                            FacultyId = 3,
                            SubjectCode = "ADS301m",
                            SubjectName = "Google Ads và Seo",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5800)
                        },
                        new
                        {
                            SubjectId = 27,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5803),
                            FacultyId = 3,
                            SubjectCode = "CAA201",
                            SubjectName = "Communications and advertising",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5804)
                        },
                        new
                        {
                            SubjectId = 28,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5806),
                            FacultyId = 3,
                            SubjectCode = "CIH201",
                            SubjectName = "Contemporary issues in hotel and tourism management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5807)
                        },
                        new
                        {
                            SubjectId = 29,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5810),
                            FacultyId = 3,
                            SubjectCode = "DMA301m",
                            SubjectName = "Digital Marketing Analytics",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5811)
                        },
                        new
                        {
                            SubjectId = 30,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5814),
                            FacultyId = 3,
                            SubjectCode = "DMS301m",
                            SubjectName = "Digital Marketing Strategy",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5815)
                        },
                        new
                        {
                            SubjectId = 31,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5817),
                            FacultyId = 3,
                            SubjectCode = "ECO102",
                            SubjectName = "Business Environment",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5819)
                        },
                        new
                        {
                            SubjectId = 32,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5822),
                            FacultyId = 3,
                            SubjectCode = "ECO111",
                            SubjectName = "Microeconomics",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5823)
                        },
                        new
                        {
                            SubjectId = 33,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5826),
                            FacultyId = 3,
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5827)
                        },
                        new
                        {
                            SubjectId = 34,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5829),
                            FacultyId = 3,
                            SubjectCode = "EXE101",
                            SubjectName = "Experiential Entrepreneurship 1",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5830)
                        },
                        new
                        {
                            SubjectId = 35,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5834),
                            FacultyId = 3,
                            SubjectCode = "EXE201",
                            SubjectName = "Experiential Entrepreneurship 2",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5836)
                        },
                        new
                        {
                            SubjectId = 36,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5838),
                            FacultyId = 3,
                            SubjectCode = "FIM302c",
                            SubjectName = "Financial modelling",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5839)
                        },
                        new
                        {
                            SubjectId = 37,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5843),
                            FacultyId = 3,
                            SubjectCode = "FIN201",
                            SubjectName = "Monetary Economics and Global Economy",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5844)
                        },
                        new
                        {
                            SubjectId = 38,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5846),
                            FacultyId = 3,
                            SubjectCode = "FIN202",
                            SubjectName = "Principles of Corporate Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5847)
                        },
                        new
                        {
                            SubjectId = 39,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5850),
                            FacultyId = 3,
                            SubjectCode = "FIN301",
                            SubjectName = "Financial Markets and Institutions",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5851)
                        },
                        new
                        {
                            SubjectId = 40,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5853),
                            FacultyId = 3,
                            SubjectCode = "FIN303",
                            SubjectName = "Advanced Corporate Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5855)
                        },
                        new
                        {
                            SubjectId = 41,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5859),
                            FacultyId = 3,
                            SubjectCode = "FIN306c",
                            SubjectName = "Financial Reporting",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5860)
                        },
                        new
                        {
                            SubjectId = 42,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5862),
                            FacultyId = 3,
                            SubjectCode = "FIN308",
                            SubjectName = "International Corporate Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5863)
                        },
                        new
                        {
                            SubjectId = 43,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5866),
                            FacultyId = 3,
                            SubjectCode = "FIN402",
                            SubjectName = "Derivatives",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5867)
                        },
                        new
                        {
                            SubjectId = 44,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5870),
                            FacultyId = 3,
                            SubjectCode = "FIN403",
                            SubjectName = "Mergers and Acquisitions",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5871)
                        },
                        new
                        {
                            SubjectId = 45,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5874),
                            FacultyId = 3,
                            SubjectCode = "HRM201c",
                            SubjectName = "Human Resource Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5875)
                        },
                        new
                        {
                            SubjectId = 46,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5878),
                            FacultyId = 3,
                            SubjectCode = "IBC201",
                            SubjectName = "Cross Cultural Management and Negotiation",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5879)
                        },
                        new
                        {
                            SubjectId = 47,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5933),
                            FacultyId = 3,
                            SubjectCode = "IBF301",
                            SubjectName = "International Finance",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5934)
                        },
                        new
                        {
                            SubjectId = 48,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5937),
                            FacultyId = 3,
                            SubjectCode = "IBI101",
                            SubjectName = "Introduction to International business",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5938)
                        },
                        new
                        {
                            SubjectId = 49,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5940),
                            FacultyId = 3,
                            SubjectCode = "IBS301m",
                            SubjectName = "International Business Strategy",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5941)
                        },
                        new
                        {
                            SubjectId = 50,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5944),
                            FacultyId = 3,
                            SubjectCode = "IEI301",
                            SubjectName = "Import and Export",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5945)
                        },
                        new
                        {
                            SubjectId = 51,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5947),
                            FacultyId = 3,
                            SubjectCode = "IIP301",
                            SubjectName = "International payment",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5948)
                        },
                        new
                        {
                            SubjectId = 52,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5951),
                            FacultyId = 3,
                            SubjectCode = "IPR102",
                            SubjectName = "Intellectual Property Rights",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5952)
                        },
                        new
                        {
                            SubjectId = 53,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5955),
                            FacultyId = 3,
                            SubjectCode = "LAW102",
                            SubjectName = "Business Law and Ethics Fundamentals",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5956)
                        },
                        new
                        {
                            SubjectId = 54,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5959),
                            FacultyId = 3,
                            SubjectCode = "LAW201c",
                            SubjectName = "International Business Law",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5960)
                        },
                        new
                        {
                            SubjectId = 55,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5962),
                            FacultyId = 3,
                            SubjectCode = "LOG311",
                            SubjectName = "Customs Operations",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5963)
                        },
                        new
                        {
                            SubjectId = 56,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5967),
                            FacultyId = 3,
                            SubjectCode = "MGT103",
                            SubjectName = "Introduction to Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5968)
                        },
                        new
                        {
                            SubjectId = 57,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5972),
                            FacultyId = 3,
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5973)
                        },
                        new
                        {
                            SubjectId = 58,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5978),
                            FacultyId = 3,
                            SubjectCode = "MKT201",
                            SubjectName = "Consumer Behavior",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5979)
                        },
                        new
                        {
                            SubjectId = 59,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5982),
                            FacultyId = 3,
                            SubjectCode = "MKT202",
                            SubjectName = "Services Marketing Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5984)
                        },
                        new
                        {
                            SubjectId = 60,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5986),
                            FacultyId = 3,
                            SubjectCode = "MKT205c",
                            SubjectName = "International Marketing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5987)
                        },
                        new
                        {
                            SubjectId = 61,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5990),
                            FacultyId = 3,
                            SubjectCode = "MKT208c",
                            SubjectName = "Social media marketing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5991)
                        },
                        new
                        {
                            SubjectId = 62,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5994),
                            FacultyId = 3,
                            SubjectCode = "MKT209m",
                            SubjectName = "Content Marketing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5995)
                        },
                        new
                        {
                            SubjectId = 63,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5998),
                            FacultyId = 3,
                            SubjectCode = "MKT301",
                            SubjectName = "Marketing Research",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5999)
                        },
                        new
                        {
                            SubjectId = 64,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6002),
                            FacultyId = 3,
                            SubjectCode = "MKT304",
                            SubjectName = "Integrated Marketing Communications",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6003)
                        },
                        new
                        {
                            SubjectId = 65,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6006),
                            FacultyId = 3,
                            SubjectCode = "MKT309m ",
                            SubjectName = "Omnichannel marketing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6007)
                        },
                        new
                        {
                            SubjectId = 66,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6012),
                            FacultyId = 3,
                            SubjectCode = "OBE102c",
                            SubjectName = "Organizational Behavior",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6013)
                        },
                        new
                        {
                            SubjectId = 67,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6018),
                            FacultyId = 3,
                            SubjectCode = "RES201",
                            SubjectName = "Food Preparation & Science",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6019)
                        },
                        new
                        {
                            SubjectId = 68,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6022),
                            FacultyId = 3,
                            SubjectCode = "RES213",
                            SubjectName = "Wines, Beers, Spirits 1",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6023)
                        },
                        new
                        {
                            SubjectId = 69,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6026),
                            FacultyId = 3,
                            SubjectCode = "RES301",
                            SubjectName = "Food and Beverage Cost Control",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6027)
                        },
                        new
                        {
                            SubjectId = 70,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6030),
                            FacultyId = 3,
                            SubjectCode = "RMB301",
                            SubjectName = "Business Research Methods",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6031)
                        },
                        new
                        {
                            SubjectId = 71,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6034),
                            FacultyId = 3,
                            SubjectCode = "RMB302",
                            SubjectName = "Research Methods & Quantitative Analysis",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6035)
                        },
                        new
                        {
                            SubjectId = 72,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6037),
                            FacultyId = 3,
                            SubjectCode = "SAL301",
                            SubjectName = "Professional Selling",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6038)
                        },
                        new
                        {
                            SubjectId = 73,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6041),
                            FacultyId = 3,
                            SubjectCode = "SCM201",
                            SubjectName = "Supply Chain Management",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6042)
                        },
                        new
                        {
                            SubjectId = 74,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6044),
                            FacultyId = 3,
                            SubjectCode = "SCM301m",
                            SubjectName = "Procurement and Global Sourcing",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6045)
                        },
                        new
                        {
                            SubjectId = 75,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6048),
                            FacultyId = 3,
                            SubjectCode = "SYB302c",
                            SubjectName = "Entrepreneurship",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(6049)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5477),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = true,
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5478)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5485),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lienkt@fe.edu.vn",
                            FullName = "Liên Kết",
                            Gender = false,
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5486)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5492),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hunglthe160235@fe.edu.vn",
                            FullName = "Hưng Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5493)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Đà Nẵng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5502),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoanglm@fe.edu.vn",
                            FullName = "Hoàng Lâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5503)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5509),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fe.edu.vn",
                            FullName = "Lành Bích",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5510)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5516),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fe.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5517)
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5523),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fe.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5525)
                        },
                        new
                        {
                            UserId = 8,
                            Address = "Hải Phòng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5530),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fe.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5531)
                        },
                        new
                        {
                            UserId = 9,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5537),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fe.edu.vn",
                            FullName = "Nam Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5538)
                        },
                        new
                        {
                            UserId = 10,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5543),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fe.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5544)
                        },
                        new
                        {
                            UserId = 11,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5550),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fe.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5551)
                        },
                        new
                        {
                            UserId = 12,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5557),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fe.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5558)
                        },
                        new
                        {
                            UserId = 13,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5564),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fe.edu.vn",
                            FullName = "Huy Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5565)
                        },
                        new
                        {
                            UserId = 14,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5571),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fe.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5572)
                        },
                        new
                        {
                            UserId = 15,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5577),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5578)
                        },
                        new
                        {
                            UserId = 16,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5584),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5585)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5308),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5310)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5313),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5314)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5399),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5400)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5402),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5403)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5406),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 11, 11, 16, 13, 34, 223, DateTimeKind.Local).AddTicks(5407)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserFaculty", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserFaculties")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CampusUserFaculty_Campuses");

                    b.HasOne("Library.Models.Faculty", "Faculty")
                        .WithMany("CampusUserFaculties")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CampusUserFaculty_Faculties");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserFaculties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CampusUserFaculty_Users");

                    b.Navigation("Campus");

                    b.Navigation("Faculty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Semester", null)
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SemesterId");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_Exams_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("Reports")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK_Reports_Exams");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.HasOne("Library.Models.Report", "Report")
                        .WithMany("ReportFiles")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.HasOne("Library.Models.Faculty", "Faculty")
                        .WithMany("Subjects")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserFaculties");

                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Navigation("CampusUserFaculties");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Navigation("ReportFiles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserFaculties");

                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
