// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20241017121630_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4576),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4593)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4595),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4596)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4597),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4598)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4599),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4600)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4601),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4601)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5230),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5229),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5227),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5229),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5231)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5235),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5235),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5234),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5234),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5236)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5239),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5239),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5238),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5238),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5240)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5242),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5242),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5241),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5243)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5246),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5246),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5245),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5247)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5250),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5249),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5249),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5250)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5254),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5253),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5253),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5254)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5257),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5257),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5256),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5258)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5261),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5260),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5260),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5261)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5264),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5264),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5263),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5265)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5268),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5268),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5266),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5267),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5269)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5316),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5316),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5314),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Reading",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5315),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5317)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5321),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5320),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5319),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Writing",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5319),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5321)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5325),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5324),
                            EstimatedTimeTest = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5323),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Listening",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5324),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5325)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5328),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5328),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5327),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5329)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5332),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5331),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5330),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5332)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5336),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5335),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5335),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5336)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5339),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5339),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5338),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5340)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5343),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5342),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5342),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5343)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5346),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5346),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5345),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5347)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5349),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5349),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5348),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5350)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5353),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5353),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5352),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5354)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4825),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4827)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4829),
                            StatusContent = "Waiting To Assign",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4829)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4830),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4831)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4832),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4833)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4834),
                            StatusContent = "Exam With Errors",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4835)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4836),
                            StatusContent = "Faultless Exam",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4837)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4838),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4839)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5393),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5395),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5396)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5398),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5399),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5399)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5400),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5401),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5402)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5403),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5403),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5404)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5405),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5406),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5406)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5407),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5408),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5408)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5410),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5410),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5411)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5412),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5413),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5414)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5415),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5416),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5416)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5417),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5418),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5419)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5420),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5420),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5421)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5422),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5422),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5423)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5424),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5425),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5425)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5426),
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5427),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5427)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5461),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5462)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5463),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5464)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5465),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5466)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5467),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5468)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5469),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5470)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5471),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5472)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5473),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5473)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5475),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5475)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5476),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5476)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5478),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5478)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5479),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5480)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5481),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5481)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5482),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5483)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5532),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5532)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5533),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5534)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5535),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5535)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5536),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5537)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5538),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5538)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5539),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5540)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5541),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5541)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5542),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5543)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5543),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5544)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5545),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5545)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5546),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5547)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5548),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5549)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5550),
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5551)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            AssignmentId = 8,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5582),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5583)
                        },
                        new
                        {
                            ReportId = 2,
                            AssignmentId = 9,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5586),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5587)
                        },
                        new
                        {
                            ReportId = 3,
                            AssignmentId = 11,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5588),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5589)
                        },
                        new
                        {
                            ReportId = 4,
                            AssignmentId = 12,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5590),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5591)
                        },
                        new
                        {
                            ReportId = 5,
                            AssignmentId = 13,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5592),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5593)
                        },
                        new
                        {
                            ReportId = 6,
                            AssignmentId = 14,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5594),
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5595)
                        });
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5625),
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2020",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5625)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5628),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2021",
                            StartDate = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5628)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5630),
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2021",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5630)
                        },
                        new
                        {
                            SemesterId = 4,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5633),
                            EndDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2021",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5633)
                        },
                        new
                        {
                            SemesterId = 5,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5635),
                            EndDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2022",
                            StartDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5635)
                        },
                        new
                        {
                            SemesterId = 6,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5637),
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2022",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5637)
                        },
                        new
                        {
                            SemesterId = 7,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5639),
                            EndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2022",
                            StartDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5639)
                        },
                        new
                        {
                            SemesterId = 8,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5641),
                            EndDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2023",
                            StartDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5641)
                        },
                        new
                        {
                            SemesterId = 9,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5643),
                            EndDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2023",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5643)
                        },
                        new
                        {
                            SemesterId = 10,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5645),
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2023",
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5645)
                        },
                        new
                        {
                            SemesterId = 11,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5647),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2024",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5648)
                        },
                        new
                        {
                            SemesterId = 12,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5649),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2024",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5649)
                        },
                        new
                        {
                            SemesterId = 13,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5651),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2024",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5651)
                        });
                });

            modelBuilder.Entity("Library.Models.SemesterCampusUserSubject", b =>
                {
                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("CampusUserSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId", "CampusUserSubjectId")
                        .HasName("PK__Semester__ACCC9C54F51488F5");

                    b.HasIndex("CampusUserSubjectId");

                    b.ToTable("SemesterCampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5678),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5679)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5680),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5680)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5681),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5682)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5683),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5683)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5684),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5685)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 11,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5686),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5686)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 12,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5687),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5687)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 21,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5688),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5689)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 31,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5689),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5690)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 6,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5691),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5691)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 7,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5692),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5692)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 8,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5693),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5693)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 9,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5694),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5695)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 10,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5695),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5696)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 16,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5697),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5697)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 17,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5698),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5698)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 26,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5699),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5700)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 36,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5700),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5701)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5702),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5702)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5703),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5703)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 14,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5704),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5704)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 15,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5705),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5706)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 24,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5707),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5707)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 25,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5708),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5708)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 34,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5709),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5709)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 35,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5711),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5711)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5712),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5712)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5713),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5713)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5714),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5715)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5716),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5716)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5717),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5717)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 11,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5718),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5718)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 12,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5719),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5720)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 21,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5720),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5721)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 31,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5722),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5722)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5723),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5723)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5724),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5724)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5725),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5726)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5726),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5727)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5728),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5728)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 41,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5729),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5729)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 42,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5730),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5730)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 51,
                            CreatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5731),
                            UpdatedDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5731)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5050),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5052)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5053),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5054)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5055),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5055)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5057),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5058)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5059),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5059)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5060),
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5061)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5062),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5063)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5064),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5064)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5066),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5066)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5067),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5068)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4905),
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4906)
                        },
                        new
                        {
                            UserId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4908),
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4909)
                        },
                        new
                        {
                            UserId = 3,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4911),
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4911)
                        },
                        new
                        {
                            UserId = 4,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4913),
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4914)
                        },
                        new
                        {
                            UserId = 5,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4915),
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4916)
                        },
                        new
                        {
                            UserId = 6,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4918),
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4918)
                        },
                        new
                        {
                            UserId = 28,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4920),
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4921)
                        },
                        new
                        {
                            UserId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4922),
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4923)
                        },
                        new
                        {
                            UserId = 8,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4925),
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4925)
                        },
                        new
                        {
                            UserId = 9,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4927),
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4928)
                        },
                        new
                        {
                            UserId = 10,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4930),
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4930)
                        },
                        new
                        {
                            UserId = 11,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4932),
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4933)
                        },
                        new
                        {
                            UserId = 27,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4935),
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4936)
                        },
                        new
                        {
                            UserId = 30,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4937),
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4938)
                        },
                        new
                        {
                            UserId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4940),
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4940)
                        },
                        new
                        {
                            UserId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4966),
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4966)
                        },
                        new
                        {
                            UserId = 14,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4968),
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4969)
                        },
                        new
                        {
                            UserId = 15,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4970),
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4971)
                        },
                        new
                        {
                            UserId = 16,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4973),
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4974)
                        },
                        new
                        {
                            UserId = 17,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4975),
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4976)
                        },
                        new
                        {
                            UserId = 18,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4979),
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4979)
                        },
                        new
                        {
                            UserId = 19,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4981),
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4982)
                        },
                        new
                        {
                            UserId = 20,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4984),
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4984)
                        },
                        new
                        {
                            UserId = 21,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4986),
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4987)
                        },
                        new
                        {
                            UserId = 29,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4988),
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4989)
                        },
                        new
                        {
                            UserId = 31,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4991),
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4991)
                        },
                        new
                        {
                            UserId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4993),
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4993)
                        },
                        new
                        {
                            UserId = 23,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4995),
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4996)
                        },
                        new
                        {
                            UserId = 24,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4998),
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4998)
                        },
                        new
                        {
                            UserId = 25,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5000),
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5000)
                        },
                        new
                        {
                            UserId = 26,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5003),
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5003)
                        });
                });

            modelBuilder.Entity("Library.Models.UserDetail", b =>
                {
                    b.Property<int>("UserDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDetailId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailFe")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EmailFE");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserDetailId");

                    b.HasIndex(new[] { "UserId" }, "UQ__UserDeta__1788CC4DC8E24AA8")
                        .IsUnique();

                    b.ToTable("UserDetail", (string)null);

                    b.HasData(
                        new
                        {
                            UserDetailId = 1,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5806),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5806),
                            UserId = 1
                        },
                        new
                        {
                            UserDetailId = 2,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5809),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Liên Kết",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5810),
                            UserId = 2
                        },
                        new
                        {
                            UserDetailId = 3,
                            Address = "Đà Nẵng",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5812),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hoàng Lâm",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5812),
                            UserId = 3
                        },
                        new
                        {
                            UserDetailId = 4,
                            Address = "Nha Trang",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5814),
                            DateOfBirth = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Nguyễn",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5815),
                            UserId = 4
                        },
                        new
                        {
                            UserDetailId = 5,
                            Address = "Cần Thơ",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5817),
                            DateOfBirth = new DateTime(1991, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Minh Nhân",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5817),
                            UserId = 5
                        },
                        new
                        {
                            UserDetailId = 6,
                            Address = "Huế",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5819),
                            DateOfBirth = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phong Tài",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5820),
                            UserId = 6
                        },
                        new
                        {
                            UserDetailId = 7,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5821),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Lê",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5822),
                            UserId = 28
                        },
                        new
                        {
                            UserDetailId = 8,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5825),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fpt.edu.vn",
                            FullName = "Lành Bích",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5825),
                            UserId = 7
                        },
                        new
                        {
                            UserDetailId = 9,
                            Address = "Hải Phòng",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5827),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fpt.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5827),
                            UserId = 8
                        },
                        new
                        {
                            UserDetailId = 10,
                            Address = "Đà Nẵng",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5829),
                            DateOfBirth = new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoangtm@fpt.edu.vn",
                            FullName = "Hoàng Tâm",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5830),
                            UserId = 9
                        },
                        new
                        {
                            UserDetailId = 11,
                            Address = "Nha Trang",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5832),
                            DateOfBirth = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhph@fpt.edu.vn",
                            FullName = "Minh Phúc",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5833),
                            UserId = 10
                        },
                        new
                        {
                            UserDetailId = 12,
                            Address = "Cần Thơ",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5834),
                            DateOfBirth = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trangnt@fpt.edu.vn",
                            FullName = "Trạng Nguyên",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5835),
                            UserId = 11
                        },
                        new
                        {
                            UserDetailId = 13,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5837),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fpt.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5839),
                            UserId = 27
                        },
                        new
                        {
                            UserDetailId = 14,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5841),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fpt.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5841),
                            UserId = 30
                        },
                        new
                        {
                            UserDetailId = 15,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5843),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5844),
                            UserId = 22
                        },
                        new
                        {
                            UserDetailId = 16,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5845),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5846),
                            UserId = 23
                        },
                        new
                        {
                            UserDetailId = 17,
                            Address = "Đà Nẵng",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5848),
                            DateOfBirth = new DateTime(1991, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Phát",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5848),
                            UserId = 24
                        },
                        new
                        {
                            UserDetailId = 18,
                            Address = "Nha Trang",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5850),
                            DateOfBirth = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Tùng",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5850),
                            UserId = 25
                        },
                        new
                        {
                            UserDetailId = 19,
                            Address = "Cần Thơ",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5852),
                            DateOfBirth = new DateTime(1993, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Trương Vĩnh",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5853),
                            UserId = 26
                        },
                        new
                        {
                            UserDetailId = 20,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5855),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fpt.edu.vn",
                            FullName = "Nam Lê",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5855),
                            UserId = 12
                        },
                        new
                        {
                            UserDetailId = 21,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5858),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fpt.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5858),
                            UserId = 13
                        },
                        new
                        {
                            UserDetailId = 22,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5860),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fpt.edu.vn",
                            FullName = "Huy Lê",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5861),
                            UserId = 14
                        },
                        new
                        {
                            UserDetailId = 23,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5863),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fpt.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5863),
                            UserId = 15
                        },
                        new
                        {
                            UserDetailId = 24,
                            Address = "Đà Nẵng",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5865),
                            DateOfBirth = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "ngocdt@fpt.edu.vn",
                            FullName = "Ngọc Đình",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5866),
                            UserId = 16
                        },
                        new
                        {
                            UserDetailId = 25,
                            Address = "Nha Trang",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5868),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhth@fpt.edu.vn",
                            FullName = "Minh Thảo",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5868),
                            UserId = 17
                        },
                        new
                        {
                            UserDetailId = 26,
                            Address = "Cần Thơ",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5870),
                            DateOfBirth = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "binhlt@fpt.edu.vn",
                            FullName = "Bình Lê",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5870),
                            UserId = 18
                        },
                        new
                        {
                            UserDetailId = 27,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5872),
                            DateOfBirth = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhnv@fpt.edu.vn",
                            FullName = "Lan Nguyễn",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5873),
                            UserId = 19
                        },
                        new
                        {
                            UserDetailId = 28,
                            Address = "Huế",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5875),
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "duongkt@fpt.edu.vn",
                            FullName = "Dương Khoa",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5875),
                            UserId = 20
                        },
                        new
                        {
                            UserDetailId = 29,
                            Address = "TP Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5877),
                            DateOfBirth = new DateTime(1992, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phuonglt@fpt.edu.vn",
                            FullName = "Phương Linh",
                            Gender = "Female",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5878),
                            UserId = 21
                        },
                        new
                        {
                            UserDetailId = 30,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5879),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fpt.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5880),
                            UserId = 29
                        },
                        new
                        {
                            UserDetailId = 31,
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5882),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fpt.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = "Male",
                            IsActive = true,
                            PhoneNumber = "0123456789",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(5882),
                            UserId = 31
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4869),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4871)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4872),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4873)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4874),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4875)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4876),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4876)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4877),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 17, 19, 16, 28, 932, DateTimeKind.Local).AddTicks(4878)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignment")
                        .WithMany("Reports")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Library.Models.SemesterCampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.CampusUserSubject", "CampusUserSubject")
                        .WithMany("SemesterCampusUserSubjects")
                        .HasForeignKey("CampusUserSubjectId")
                        .IsRequired()
                        .HasConstraintName("FK__SemesterC__Campu__71D1E811");

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("SemesterCampusUserSubjects")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__SemesterC__Updat__70DDC3D8");

                    b.Navigation("CampusUserSubject");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserDetail", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithOne("UserDetail")
                        .HasForeignKey("Library.Models.UserDetail", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User_UserDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Navigation("SemesterCampusUserSubjects");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("SemesterCampusUserSubjects");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserDetail");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
