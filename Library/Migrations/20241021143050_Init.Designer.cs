// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20241021143050_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5427),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5441)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5443),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5444)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5446),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5446)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5448),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5448)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5450),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5450)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6130),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6130),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6127),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6129),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6131)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6136),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6136),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6134),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6135),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6137)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6141),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6140),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6139),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6140),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6141)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6146),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6146),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6145),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6147)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6150),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6150),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6149),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6151)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6154),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6153),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6153),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6155)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6158),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6158),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6156),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6159)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6162),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6161),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6161),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6162)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6166),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6165),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6164),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6166)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6170),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6169),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6169),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6170)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6174),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6173),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6172),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6173),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6174)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6178),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6178),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6176),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Reading",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6177),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6179)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6182),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6182),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6181),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Writing",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6181),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6183)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6187),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6186),
                            EstimatedTimeTest = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6184),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Listening",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6185),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6187)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6190),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6190),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6189),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6191)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6194),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6193),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6193),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6195)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6199),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6199),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6198),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6200)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6203),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6202),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6202),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6203)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6207),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6206),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6205),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6208)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6212),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6211),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6211),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6212)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6215),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6215),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6214),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6216)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6219),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6219),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6218),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6220)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5620),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5622)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5623),
                            StatusContent = "Waiting To Assign",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5624)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5626),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5626)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5628),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5628)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5630),
                            StatusContent = "Exam With Errors",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5630)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5632),
                            StatusContent = "Faultless Exam",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5632)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5633),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5634)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6262),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6263),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6264)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6265),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6266),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6267)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6268),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6269),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6269)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6270),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6271),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6272)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6273),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6274),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6274)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6275),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6276),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6277)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6278),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6279),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6280)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6281),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6282),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6283)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6284),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6285),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6286)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6288),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6288),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6289)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6335),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6336),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6338)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6339),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6340),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6340)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6342),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6343),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6343)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6344),
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6345),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6346)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6382),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6384)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6385),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6386)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6387),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6387)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6389),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6389)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6390),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6391)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6392),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6393)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6394),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6394)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6395),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6396)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6398),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6399),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6400)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6401),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6401)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6403),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6403)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6404),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6405)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6435),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6435)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6437),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6437)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6438),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6439)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6440),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6440)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6442),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6442)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6443),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6444)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6444),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6446)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6447),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6448)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6449),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6449)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6450),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6451)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6452),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6453)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6454),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6454)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6455),
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6456)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            AssignmentId = 8,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6488),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6489)
                        },
                        new
                        {
                            ReportId = 2,
                            AssignmentId = 9,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6491),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6492)
                        },
                        new
                        {
                            ReportId = 3,
                            AssignmentId = 11,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6494),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6494)
                        },
                        new
                        {
                            ReportId = 4,
                            AssignmentId = 12,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6496),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6496)
                        },
                        new
                        {
                            ReportId = 5,
                            AssignmentId = 13,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6499),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6499)
                        },
                        new
                        {
                            ReportId = 6,
                            AssignmentId = 14,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6501),
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6501)
                        });
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6537),
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2020",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6538)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6540),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2021",
                            StartDate = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6540)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6542),
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2021",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6543)
                        },
                        new
                        {
                            SemesterId = 4,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6544),
                            EndDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2021",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6545)
                        },
                        new
                        {
                            SemesterId = 5,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6546),
                            EndDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2022",
                            StartDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6547)
                        },
                        new
                        {
                            SemesterId = 6,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6548),
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2022",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6549)
                        },
                        new
                        {
                            SemesterId = 7,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6550),
                            EndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2022",
                            StartDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6551)
                        },
                        new
                        {
                            SemesterId = 8,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6552),
                            EndDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2023",
                            StartDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6553)
                        },
                        new
                        {
                            SemesterId = 9,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6555),
                            EndDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2023",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6556)
                        },
                        new
                        {
                            SemesterId = 10,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6558),
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2023",
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6558)
                        },
                        new
                        {
                            SemesterId = 11,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6560),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2024",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6560)
                        },
                        new
                        {
                            SemesterId = 12,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6562),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2024",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6562)
                        },
                        new
                        {
                            SemesterId = 13,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6564),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2024",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6564)
                        });
                });

            modelBuilder.Entity("Library.Models.SemesterCampusUserSubject", b =>
                {
                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("CampusUserSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId", "CampusUserSubjectId")
                        .HasName("PK__Semester__ACCC9C54F51488F5");

                    b.HasIndex("CampusUserSubjectId");

                    b.ToTable("SemesterCampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6616),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6617)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6619),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6619)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6620),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6621)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6622),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6622)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6623),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6623)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 11,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6624),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6625)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 12,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6626),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6626)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 21,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6627),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6627)
                        },
                        new
                        {
                            SemesterId = 1,
                            CampusUserSubjectId = 31,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6628),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6628)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 6,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6629),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6630)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 7,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6631),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6631)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 8,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6632),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6632)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 9,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6633),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6634)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 10,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6635),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6636)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 16,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6637),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6637)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 17,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6638),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6639)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 26,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6639),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6640)
                        },
                        new
                        {
                            SemesterId = 2,
                            CampusUserSubjectId = 36,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6641),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6641)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6642),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6643)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6643),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6644)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 14,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6645),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6645)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 15,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6646),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6646)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 24,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6647),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6648)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 25,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6649),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6649)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 34,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6650),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6650)
                        },
                        new
                        {
                            SemesterId = 3,
                            CampusUserSubjectId = 35,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6651),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6651)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6652),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6653)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6654),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6654)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6655),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6655)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6656),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6657)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6658),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6658)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 11,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6659),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6659)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 12,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6660),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6661)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 21,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6661),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6662)
                        },
                        new
                        {
                            SemesterId = 4,
                            CampusUserSubjectId = 31,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6663),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6663)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 1,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6664),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6664)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 2,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6665),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6666)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 3,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6666),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6667)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 4,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6668),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6668)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 5,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6669),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6669)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 41,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6670),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6671)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 42,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6672),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6672)
                        },
                        new
                        {
                            SemesterId = 5,
                            CampusUserSubjectId = 51,
                            CreatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6673),
                            UpdatedDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(6673)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5884),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5885)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5900),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5901)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5902),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5903)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5904),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5905)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5906),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5907)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5908),
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5908)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5910),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5911)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5912),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5913)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5914),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5914)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5916),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5916)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5703),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = true,
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5703)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5707),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Liên Kết",
                            Gender = false,
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5707)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Đà Nẵng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5710),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hoàng Lâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5711)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5714),
                            DateOfBirth = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5714)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5718),
                            DateOfBirth = new DateTime(1991, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Minh Nhân",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5718)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5721),
                            DateOfBirth = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phong Tài",
                            Gender = true,
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5721)
                        },
                        new
                        {
                            UserId = 28,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5724),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hưng Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5725)
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5728),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fe.edu.vn",
                            FullName = "Lành Bích",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5728)
                        },
                        new
                        {
                            UserId = 8,
                            Address = "Hải Phòng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5756),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fe.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5757)
                        },
                        new
                        {
                            UserId = 9,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5760),
                            DateOfBirth = new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoangtm@fe.edu.vn",
                            FullName = "Hoàng Tâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5761)
                        },
                        new
                        {
                            UserId = 10,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5764),
                            DateOfBirth = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhph@fe.edu.vn",
                            FullName = "Minh Phúc",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5764)
                        },
                        new
                        {
                            UserId = 11,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5767),
                            DateOfBirth = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trangnt@fe.edu.vn",
                            FullName = "Trạng Nguyên",
                            Gender = false,
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5768)
                        },
                        new
                        {
                            UserId = 27,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5771),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fe.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5771)
                        },
                        new
                        {
                            UserId = 30,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5774),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fe.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5775)
                        },
                        new
                        {
                            UserId = 12,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5777),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fe.edu.vn",
                            FullName = "Nam Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5778)
                        },
                        new
                        {
                            UserId = 13,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5782),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fe.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5782)
                        },
                        new
                        {
                            UserId = 14,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5785),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fe.edu.vn",
                            FullName = "Huy Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5786)
                        },
                        new
                        {
                            UserId = 15,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5789),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fe.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5790)
                        },
                        new
                        {
                            UserId = 16,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5792),
                            DateOfBirth = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "ngocdt@fe.edu.vn",
                            FullName = "Ngọc Đình",
                            Gender = false,
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5793)
                        },
                        new
                        {
                            UserId = 17,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5796),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhth@fe.edu.vn",
                            FullName = "Minh Thảo",
                            Gender = false,
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5796)
                        },
                        new
                        {
                            UserId = 18,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5799),
                            DateOfBirth = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "binhlt@fe.edu.vn",
                            FullName = "Bình Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5800)
                        },
                        new
                        {
                            UserId = 19,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5803),
                            DateOfBirth = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhnv@fe.edu.vn",
                            FullName = "Lan Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5804)
                        },
                        new
                        {
                            UserId = 20,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5807),
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "duongkt@fe.edu.vn",
                            FullName = "Dương Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5807)
                        },
                        new
                        {
                            UserId = 21,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5810),
                            DateOfBirth = new DateTime(1992, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phuonglt@fe.edu.vn",
                            FullName = "Phương Linh",
                            Gender = false,
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5811)
                        },
                        new
                        {
                            UserId = 29,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5813),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fe.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5814)
                        },
                        new
                        {
                            UserId = 31,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5817),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fe.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5817)
                        },
                        new
                        {
                            UserId = 22,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5820),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5820)
                        },
                        new
                        {
                            UserId = 23,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5824),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5824)
                        },
                        new
                        {
                            UserId = 24,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5827),
                            DateOfBirth = new DateTime(1991, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Phát",
                            Gender = true,
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5827)
                        },
                        new
                        {
                            UserId = 25,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5830),
                            DateOfBirth = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Tùng",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5831)
                        },
                        new
                        {
                            UserId = 26,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5835),
                            DateOfBirth = new DateTime(1993, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Trương Vĩnh",
                            Gender = true,
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5836)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5662),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5663)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5665),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5665)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5667),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5667)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5668),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5669)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5670),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 21, 21, 30, 49, 301, DateTimeKind.Local).AddTicks(5671)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignment")
                        .WithMany("Reports")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Library.Models.SemesterCampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.CampusUserSubject", "CampusUserSubject")
                        .WithMany("SemesterCampusUserSubjects")
                        .HasForeignKey("CampusUserSubjectId")
                        .IsRequired()
                        .HasConstraintName("FK__SemesterC__Campu__71D1E811");

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("SemesterCampusUserSubjects")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__SemesterC__Updat__70DDC3D8");

                    b.Navigation("CampusUserSubject");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Navigation("SemesterCampusUserSubjects");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("SemesterCampusUserSubjects");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
