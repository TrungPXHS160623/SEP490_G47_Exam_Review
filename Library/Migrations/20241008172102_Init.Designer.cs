// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20241008172102_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(524),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(546)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(550),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(551)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(554),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(555)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(558),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(559)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(562),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(563)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 12
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SubjectId = 3,
                            UserId = 12
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SubjectId = 4,
                            UserId = 12
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SubjectId = 5,
                            UserId = 12
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1618),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1617),
                            EstimatedTimeTest = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1613),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1616),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1619)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1627),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1626),
                            EstimatedTimeTest = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1624),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1625),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1628)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1634),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1633),
                            EstimatedTimeTest = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1631),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1632),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1635)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1641),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1640),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1638),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1641)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1648),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1647),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1646),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1649)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1654),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1653),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1653),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1655)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1661),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1660),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1659),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1663)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1668),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1667),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1666),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1669)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1674),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1673),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1673),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1675)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1682),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1681),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1679),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1682)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1689),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1688),
                            EstimatedTimeTest = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1686),
                            ExamCode = "ECO111_Q1_10_111222",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1687),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1690)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1695),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1695),
                            EstimatedTimeTest = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1693),
                            ExamCode = "ECO111_Q2_5_222111",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1694),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1696)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1701),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1701),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1700),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1702)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1708),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1707),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1706),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1709)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1715),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1714),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1713),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1716)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1721),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1720),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1719),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1722)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1728),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1727),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1726),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1728)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1734),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1733),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1732),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1735)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1740),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1739),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1738),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1741)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1746),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1745),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1744),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1748)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(850),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(852)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(855),
                            StatusContent = "Waiting to Assign",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(856)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(859),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(860)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(932),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(934)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(936),
                            StatusContent = "Finish Review",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(937)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(941),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(942)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1808),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1810),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1811)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1814),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1816),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1817)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1918),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1919),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1920)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1923),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1924),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1925)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1927),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1928),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1929)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1931),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1933),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1933)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1936),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1937),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1938)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1940),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1941),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1942)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 3,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1946),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1947),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1948)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 3,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1951),
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1953),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1954)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2003),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2004)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2007),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2008)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2010),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2011)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2013),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2014)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2016),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "Lecture List",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2017)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2019),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2020)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2022),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2023)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2025),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2026)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2028),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2029)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2032),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2034)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2037),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2038)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2085),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2087)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2089),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2090)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2092),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2093)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2096),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2096)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2098),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2099)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2101),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2102)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2103),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2104)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2106),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2107)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2109),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2110)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2111),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2112)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2114),
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2115)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignemtId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignemtId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2158),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2159)
                        },
                        new
                        {
                            ReportId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2163),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2164)
                        },
                        new
                        {
                            ReportId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2166),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Update the definition to clarify that asynchronous programming allows multiple tasks to run concurrently without blocking.",
                            ReportContent = "In PRN221, question 3 incorrectly defines the concept of asynchronous programming.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2167)
                        },
                        new
                        {
                            ReportId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2169),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ECO111, question 4 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2170)
                        },
                        new
                        {
                            ReportId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2173),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ECO111, question 5 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(2174)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1310),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1311)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1314),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1315)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1318),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1319)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1321),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1322)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1324),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1325)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1327),
                            SubjectCode = "ECO111",
                            SubjectName = "Microeconomics",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1328)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1331),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1332)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1334),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1335)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1337),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1338)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1340),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1341)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1060),
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1062)
                        },
                        new
                        {
                            UserId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1066),
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1068)
                        },
                        new
                        {
                            UserId = 3,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1073),
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1074)
                        },
                        new
                        {
                            UserId = 4,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1077),
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1078)
                        },
                        new
                        {
                            UserId = 5,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1081),
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1083)
                        },
                        new
                        {
                            UserId = 6,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1087),
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1087)
                        },
                        new
                        {
                            UserId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1091),
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1093)
                        },
                        new
                        {
                            UserId = 8,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1096),
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1097)
                        },
                        new
                        {
                            UserId = 9,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1101),
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1102)
                        },
                        new
                        {
                            UserId = 10,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1105),
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1106)
                        },
                        new
                        {
                            UserId = 11,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1110),
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1111)
                        },
                        new
                        {
                            UserId = 27,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1115),
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1116)
                        },
                        new
                        {
                            UserId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1120),
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1121)
                        },
                        new
                        {
                            UserId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1125),
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1126)
                        },
                        new
                        {
                            UserId = 14,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1129),
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1130)
                        },
                        new
                        {
                            UserId = 15,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1134),
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1135)
                        },
                        new
                        {
                            UserId = 16,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1138),
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1138)
                        },
                        new
                        {
                            UserId = 17,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1142),
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1143)
                        },
                        new
                        {
                            UserId = 18,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1146),
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1147)
                        },
                        new
                        {
                            UserId = 19,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1151),
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1152)
                        },
                        new
                        {
                            UserId = 20,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1155),
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1156)
                        },
                        new
                        {
                            UserId = 21,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1159),
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1160)
                        },
                        new
                        {
                            UserId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1165),
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1166)
                        },
                        new
                        {
                            UserId = 23,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1222),
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1223)
                        },
                        new
                        {
                            UserId = 24,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1228),
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1231)
                        },
                        new
                        {
                            UserId = 25,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1235),
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1236)
                        },
                        new
                        {
                            UserId = 26,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1239),
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1240)
                        },
                        new
                        {
                            UserId = 28,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1243),
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1244)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(992),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(997)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1000),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1001)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1004),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1005)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1008),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1010)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1012),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 9, 0, 21, 1, 3, DateTimeKind.Local).AddTicks(1013)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignemt")
                        .WithMany("Reports")
                        .HasForeignKey("AssignemtId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignemt");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
