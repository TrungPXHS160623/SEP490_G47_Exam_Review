// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    partial class QuizManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9058),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9079)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9089),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9092)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9100),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9104)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9109),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9114)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9117),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9118)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLecturer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 1,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 2,
                            UserId = 12
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 3,
                            UserId = 12
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 4,
                            UserId = 12
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 5,
                            UserId = 12
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            IsLecturer = false,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            IsLecturer = false,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            IsLecturer = false,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            IsLecturer = false,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            IsLecturer = false,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(800),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(798),
                            EstimatedTimeTest = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(792),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(796),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(802)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(811),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(810),
                            EstimatedTimeTest = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(806),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(808),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(813)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(821),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(820),
                            EstimatedTimeTest = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(817),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(818),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(823)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(830),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(829),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(827),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(831)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(838),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(837),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(835),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(839)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(846),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(845),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(844),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(848)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(856),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(853),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(852),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(857)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(864),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(862),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(861),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(865)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(871),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(870),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(869),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(873)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(879),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(878),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(877),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(880)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(888),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(887),
                            EstimatedTimeTest = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(885),
                            ExamCode = "ECO111_Q1_10_111222",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(886),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(890)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(897),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(896),
                            EstimatedTimeTest = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(894),
                            ExamCode = "ECO111_Q2_5_222111",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(895),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(899)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(906),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(905),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(904),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(907)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(913),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(912),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(911),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(915)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(922),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(921),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(919),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(923)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(930),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(929),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(928),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(931)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(938),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(937),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(935),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(939)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(946),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(945),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(944),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(947)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(955),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(954),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(951),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(956)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(964),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(962),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(961),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(965)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9880),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9893)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9897),
                            StatusContent = "Waiting to Assign",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9898)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9902),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9903)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9906),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9907)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9910),
                            StatusContent = "Finish Review",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9911)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9914),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 514, DateTimeKind.Local).AddTicks(9916)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1082),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1085),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1087)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1091),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1093),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1094)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1097),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1098),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1099)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1103),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1105),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1106)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1108),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1110),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1112)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1114),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1116),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1117)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1120),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1122),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1123)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 3,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1126),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1127),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1128)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 3,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1131),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1132),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1133)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 3,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1136),
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1138),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1139)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1216),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1218)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1234),
                            MenuLink = "/Admin/History",
                            MenuName = "History",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1236)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1240),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1241)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1243),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1244)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1247),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "Lecture List",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1248)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1250),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1251)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1254),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1255)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1258),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1259)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1322),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1324)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1327),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1328)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1330),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1331)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1333),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1334)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1336),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1338)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1340),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1341)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1343),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1344)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1346),
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1348)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignemtId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignemtId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1413),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1414)
                        },
                        new
                        {
                            ReportId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1419),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1420)
                        },
                        new
                        {
                            ReportId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1423),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Update the definition to clarify that asynchronous programming allows multiple tasks to run concurrently without blocking.",
                            ReportContent = "In PRN221, question 3 incorrectly defines the concept of asynchronous programming.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1424)
                        },
                        new
                        {
                            ReportId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1428),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ECO111, question 4 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1429)
                        },
                        new
                        {
                            ReportId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1432),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ECO111, question 5 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(1433)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(394),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(397)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(401),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(403)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(407),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(408)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(411),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(413)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(415),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(417)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(420),
                            SubjectCode = "ECO111",
                            SubjectName = "Microeconomics",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(422)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(425),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(426)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(429),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(431)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(434),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(436)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(439),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(441)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(129),
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(135)
                        },
                        new
                        {
                            UserId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(141),
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(142)
                        },
                        new
                        {
                            UserId = 3,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(147),
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(148)
                        },
                        new
                        {
                            UserId = 4,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(152),
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(153)
                        },
                        new
                        {
                            UserId = 5,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(157),
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(158)
                        },
                        new
                        {
                            UserId = 6,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(161),
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(162)
                        },
                        new
                        {
                            UserId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(167),
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(168)
                        },
                        new
                        {
                            UserId = 8,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(173),
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(175)
                        },
                        new
                        {
                            UserId = 9,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(178),
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(180)
                        },
                        new
                        {
                            UserId = 10,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(185),
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(186)
                        },
                        new
                        {
                            UserId = 11,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(190),
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(191)
                        },
                        new
                        {
                            UserId = 27,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(195),
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(197)
                        },
                        new
                        {
                            UserId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(201),
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(202)
                        },
                        new
                        {
                            UserId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(206),
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(207)
                        },
                        new
                        {
                            UserId = 14,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(211),
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(213)
                        },
                        new
                        {
                            UserId = 15,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(217),
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(218)
                        },
                        new
                        {
                            UserId = 16,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(224),
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(225)
                        },
                        new
                        {
                            UserId = 17,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(229),
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(231)
                        },
                        new
                        {
                            UserId = 18,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(235),
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(236)
                        },
                        new
                        {
                            UserId = 19,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(240),
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(242)
                        },
                        new
                        {
                            UserId = 20,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(246),
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(247)
                        },
                        new
                        {
                            UserId = 21,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(252),
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(253)
                        },
                        new
                        {
                            UserId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(257),
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(258)
                        },
                        new
                        {
                            UserId = 23,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(262),
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(263)
                        },
                        new
                        {
                            UserId = 24,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(268),
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(269)
                        },
                        new
                        {
                            UserId = 25,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(273),
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(275)
                        },
                        new
                        {
                            UserId = 26,
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(280),
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(282)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(5),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(7)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(12),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(13)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(18),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(19)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(45),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(47)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(51),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 8, 14, 54, 23, 515, DateTimeKind.Local).AddTicks(52)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignemt")
                        .WithMany("Reports")
                        .HasForeignKey("AssignemtId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignemt");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
