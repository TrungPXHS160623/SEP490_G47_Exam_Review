// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    partial class QuizManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7042),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7062)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7066),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7067)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7070),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7072)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7074),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7075)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7078),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7079)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_CampusUserSubject_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("TermDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_Exams_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8624),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8622),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8619),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 5,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8621),
                            SubjectId = 1,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8626)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8635),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8634),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8631),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 5,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8633),
                            SubjectId = 1,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8636)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8645),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8643),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8641),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8642),
                            SubjectId = 2,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8646)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8652),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8651),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDate = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8650),
                            SubjectId = 2,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8653)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8660),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8659),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8658),
                            SubjectId = 3,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8661)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8667),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8666),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8665),
                            SubjectId = 3,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8669)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8677),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8676),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8675),
                            SubjectId = 4,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8678)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8685),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8684),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDate = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8683),
                            SubjectId = 4,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8686)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8693),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8692),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8690),
                            SubjectId = 5,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8694)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8701),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8700),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDate = new DateTime(2024, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8699),
                            SubjectId = 5,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8702)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8710),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8709),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8706),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 7,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8707),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8711)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8719),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8718),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8716),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDate = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 7,
                            ExamType = "Reading",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8717),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8720)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8727),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8726),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8724),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 7,
                            ExamType = "Writing",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8725),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8728)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8735),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8734),
                            EstimatedTimeTest = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8732),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 7,
                            ExamType = "Listening",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8733),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8736)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8744),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8743),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8741),
                            SubjectId = 7,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8745)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8753),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8750),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8749),
                            SubjectId = 7,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8754)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8760),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8759),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDate = new DateTime(2024, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8758),
                            SubjectId = 8,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8762)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8829),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8828),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDate = new DateTime(2024, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8827),
                            SubjectId = 8,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8830)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8838),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8837),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDate = new DateTime(2024, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8836),
                            SubjectId = 9,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8839)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8846),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8845),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8844),
                            SubjectId = 9,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8847)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8854),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8853),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8852),
                            SubjectId = 10,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8855)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8865),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8864),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Other",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8862),
                            SubjectId = 10,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8866)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7537),
                            StatusContent = "Unassigned",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7540)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7543),
                            StatusContent = "Pending",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7544)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7547),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7548)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7551),
                            StatusContent = "Reviewed",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7552)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7554),
                            StatusContent = "Erroneous",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7555)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7557),
                            StatusContent = "Faultless",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7558)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7561),
                            StatusContent = "Completed",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7563)
                        });
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeanId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FacultyId");

                    b.HasIndex("DeanId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7743),
                            Description = "Specializes in training related to information technology and software.",
                            FacultyName = "Faculty of Information Technology",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7744)
                        },
                        new
                        {
                            FacultyId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7749),
                            Description = "Specializes in training in economics, business administration, and finance.",
                            FacultyName = "Faculty of Economics",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7750)
                        },
                        new
                        {
                            FacultyId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7754),
                            Description = "Trains in language, culture, and international communication.",
                            FacultyName = "Faculty of Foreign Languages",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7755)
                        },
                        new
                        {
                            FacultyId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7759),
                            Description = "Specializes in engineering, electronics, and mechanics.",
                            FacultyName = "Faculty of Engineering",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7760)
                        },
                        new
                        {
                            FacultyId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7763),
                            Description = "Trains in management, leadership, and organization.",
                            FacultyName = "Faculty of Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7764)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("ExamTestDuration")
                        .HasColumnType("time");

                    b.Property<string>("GeneralFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReady")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8938),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8943),
                            ExamId = 1,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8944)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8949),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8951),
                            ExamId = 2,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8952)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8954),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8955),
                            ExamId = 3,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8956)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8958),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8960),
                            ExamId = 11,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8961)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8963),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8965),
                            ExamId = 12,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8966)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8968),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8969),
                            ExamId = 13,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8970)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8972),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8974),
                            ExamId = 14,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8975)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8977),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8979),
                            ExamId = 1,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8980)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8982),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8983),
                            ExamId = 2,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8984)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8988),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8989),
                            ExamId = 3,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8991)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8993),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8994),
                            ExamId = 11,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8995)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8997),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8999),
                            ExamId = 12,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9000)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9002),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9003),
                            ExamId = 13,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9004)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9006),
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9008),
                            ExamId = 14,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9009)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9068),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9070)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9073),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9074)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9076),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9077)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9079),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9080)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9083),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9084)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9086),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9087)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9089),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9091)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9093),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9094)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9095),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9097)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9099),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9100)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9101),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9103)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9105),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9105)
                        },
                        new
                        {
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9108),
                            MenuLink = "/Admin/SemesterManagement",
                            MenuName = "Semester Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9109)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9111),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9112)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9157),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9160)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9162),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9164)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9166),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9167)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9169),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9170)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9172),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9173)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9175),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9176)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9178),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9179)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9180),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9181)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9225),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9227)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9228),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9229)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9231),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9232)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9234),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9235)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9237),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9238)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9239),
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9240)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            AssignmentId = 8,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9306),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9308)
                        },
                        new
                        {
                            ReportId = 2,
                            AssignmentId = 9,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9312),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9313)
                        },
                        new
                        {
                            ReportId = 3,
                            AssignmentId = 11,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9316),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9317)
                        },
                        new
                        {
                            ReportId = 4,
                            AssignmentId = 12,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9320),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9321)
                        },
                        new
                        {
                            ReportId = 5,
                            AssignmentId = 13,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9324),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9325)
                        },
                        new
                        {
                            ReportId = 6,
                            AssignmentId = 14,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9327),
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9329)
                        });
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportFiles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9381),
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa21",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9382)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9386),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Sp21",
                            StartDate = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9387)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9390),
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Su21",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9391)
                        },
                        new
                        {
                            SemesterId = 4,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9393),
                            EndDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa21",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9394)
                        },
                        new
                        {
                            SemesterId = 5,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9398),
                            EndDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Sp22",
                            StartDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9398)
                        },
                        new
                        {
                            SemesterId = 6,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9401),
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Su22",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9402)
                        },
                        new
                        {
                            SemesterId = 7,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9405),
                            EndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa22",
                            StartDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9406)
                        },
                        new
                        {
                            SemesterId = 8,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9409),
                            EndDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Sp23",
                            StartDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9410)
                        },
                        new
                        {
                            SemesterId = 9,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9413),
                            EndDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Su23",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9414)
                        },
                        new
                        {
                            SemesterId = 10,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9417),
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa23",
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9418)
                        },
                        new
                        {
                            SemesterId = 11,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9422),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Sp24",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9423)
                        },
                        new
                        {
                            SemesterId = 12,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9426),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Su24",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9426)
                        },
                        new
                        {
                            SemesterId = 13,
                            CreatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9430),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fa24",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(9430)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8250),
                            FacultyId = 1,
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8253)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8257),
                            FacultyId = 1,
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8258)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8261),
                            FacultyId = 1,
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8262)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8265),
                            FacultyId = 1,
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8266)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8269),
                            FacultyId = 1,
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8270)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8273),
                            FacultyId = 2,
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8274)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8277),
                            FacultyId = 2,
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8278)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8281),
                            FacultyId = 2,
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8282)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8285),
                            FacultyId = 2,
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8286)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8288),
                            FacultyId = 2,
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8289)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7828),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = true,
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7829)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7836),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lienkt@fe.edu.vn",
                            FullName = "Liên Kết",
                            Gender = false,
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7838)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Đà Nẵng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7844),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoanglm@fe.edu.vn",
                            FullName = "Hoàng Lâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7845)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7925),
                            DateOfBirth = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "anhnq@fe.edu.vn",
                            FullName = "Anh Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7926)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7932),
                            DateOfBirth = new DateTime(1991, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhnh@fe.edu.vn",
                            FullName = "Minh Nhân",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7933)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7938),
                            DateOfBirth = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phongtl@fe.edu.vn",
                            FullName = "Phong Tài",
                            Gender = true,
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7939)
                        },
                        new
                        {
                            UserId = 28,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7945),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hunglthe160235@fe.edu.vn",
                            FullName = "Hưng Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7946)
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7951),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fe.edu.vn",
                            FullName = "Lành Bích",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7952)
                        },
                        new
                        {
                            UserId = 8,
                            Address = "Hải Phòng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7959),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fe.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7960)
                        },
                        new
                        {
                            UserId = 9,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7965),
                            DateOfBirth = new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoangtm@fe.edu.vn",
                            FullName = "Hoàng Tâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7966)
                        },
                        new
                        {
                            UserId = 10,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7971),
                            DateOfBirth = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhph@fe.edu.vn",
                            FullName = "Minh Phúc",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7972)
                        },
                        new
                        {
                            UserId = 11,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7977),
                            DateOfBirth = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trangnt@fe.edu.vn",
                            FullName = "Trạng Nguyên",
                            Gender = false,
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7978)
                        },
                        new
                        {
                            UserId = 27,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7983),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fe.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7984)
                        },
                        new
                        {
                            UserId = 30,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7989),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fe.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7991)
                        },
                        new
                        {
                            UserId = 12,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7998),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fe.edu.vn",
                            FullName = "Nam Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7999)
                        },
                        new
                        {
                            UserId = 13,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8004),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fe.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8005)
                        },
                        new
                        {
                            UserId = 14,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8010),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fe.edu.vn",
                            FullName = "Huy Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8011)
                        },
                        new
                        {
                            UserId = 15,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8017),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fe.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8018)
                        },
                        new
                        {
                            UserId = 16,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8025),
                            DateOfBirth = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "ngocdt@fe.edu.vn",
                            FullName = "Ngọc Đình",
                            Gender = false,
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8026)
                        },
                        new
                        {
                            UserId = 17,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8031),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhth@fe.edu.vn",
                            FullName = "Minh Thảo",
                            Gender = false,
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8032)
                        },
                        new
                        {
                            UserId = 18,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8039),
                            DateOfBirth = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "binhlt@fe.edu.vn",
                            FullName = "Bình Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8040)
                        },
                        new
                        {
                            UserId = 19,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8046),
                            DateOfBirth = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhnv@fe.edu.vn",
                            FullName = "Lan Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8047)
                        },
                        new
                        {
                            UserId = 20,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8053),
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "duongkt@fe.edu.vn",
                            FullName = "Dương Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8054)
                        },
                        new
                        {
                            UserId = 21,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8059),
                            DateOfBirth = new DateTime(1992, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phuonglt@fe.edu.vn",
                            FullName = "Phương Linh",
                            Gender = false,
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8061)
                        },
                        new
                        {
                            UserId = 29,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8068),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fe.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8069)
                        },
                        new
                        {
                            UserId = 31,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8074),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fe.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8075)
                        },
                        new
                        {
                            UserId = 22,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8135),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8136)
                        },
                        new
                        {
                            UserId = 23,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8143),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8144)
                        },
                        new
                        {
                            UserId = 24,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8150),
                            DateOfBirth = new DateTime(1991, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Phát",
                            Gender = true,
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8151)
                        },
                        new
                        {
                            UserId = 25,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8161),
                            DateOfBirth = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Tùng",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8163)
                        },
                        new
                        {
                            UserId = 26,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8168),
                            DateOfBirth = new DateTime(1993, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Trương Vĩnh",
                            Gender = true,
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(8169)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7621),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7622)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7625),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7626)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7629),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7650)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7679),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7681)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7683),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 11, 3, 22, 10, 18, 837, DateTimeKind.Local).AddTicks(7684)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_CampusUserSubject_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_Exams_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.HasOne("Library.Models.User", "Deans")
                        .WithMany("Faculties")
                        .HasForeignKey("DeanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Deans");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignment")
                        .WithMany("Reports")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.HasOne("Library.Models.Report", "Report")
                        .WithMany("ReportFiles")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.HasOne("Library.Models.Faculty", "Faculty")
                        .WithMany("Subjects")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Navigation("ReportFiles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Faculties");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
