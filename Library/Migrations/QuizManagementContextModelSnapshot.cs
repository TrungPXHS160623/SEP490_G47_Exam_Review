// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    partial class QuizManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(743),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(754)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(757),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(757)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(759),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(759)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(760),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(761)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(762),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(763)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_CampusUserSubject_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GeneralFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsReady")
                        .HasColumnType("bit");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("TermDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_Exams_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1458),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1459),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1457),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1456),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1457),
                            SubjectId = 1,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1460)
                        },
                        new
                        {
                            ExamId = 2,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1466),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1467),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1465),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1463),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1464),
                            SubjectId = 1,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1467)
                        },
                        new
                        {
                            ExamId = 3,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1472),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1473),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1471),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1470),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1471),
                            SubjectId = 2,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1473)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1477),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1477),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDate = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1476),
                            SubjectId = 2,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1478)
                        },
                        new
                        {
                            ExamId = 5,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1482),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1481),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1481),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1480),
                            SubjectId = 3,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1483)
                        },
                        new
                        {
                            ExamId = 6,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1487),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1488),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1487),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1486),
                            SubjectId = 3,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1488)
                        },
                        new
                        {
                            ExamId = 7,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1495),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1496),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1494),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1493),
                            SubjectId = 4,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1496)
                        },
                        new
                        {
                            ExamId = 8,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1500),
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1501),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1499),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDate = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            GeneralFeedback = "This exam covers the material from Block 10.",
                            IsReady = true,
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1499),
                            SubjectId = 4,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1501)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1506),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1505),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1505),
                            SubjectId = 5,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1506)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1510),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1510),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDate = new DateTime(2024, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1509),
                            SubjectId = 5,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1511)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1515),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1514),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1513),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1514),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1515)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1519),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1519),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1518),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDate = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Reading",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1518),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1520)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1524),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1524),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1522),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Writing",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1523),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1525)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1529),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1528),
                            EstimatedTimeTest = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1527),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 6,
                            ExamType = "Listening",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1528),
                            SubjectId = 6,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1530)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1561),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1560),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1559),
                            SubjectId = 7,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1561)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1565),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1564),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1564),
                            SubjectId = 7,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1565)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1573),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1572),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDate = new DateTime(2024, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1572),
                            SubjectId = 8,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1573)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1577),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1576),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDate = new DateTime(2024, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1576),
                            SubjectId = 8,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1577)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1581),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1581),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDate = new DateTime(2024, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1580),
                            SubjectId = 9,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1582)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1585),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1585),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1584),
                            SubjectId = 9,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1586)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1590),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1589),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "90",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1588),
                            SubjectId = 10,
                            TermDuration = "Block 10 (10 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1590)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1594),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1594),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "60",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1593),
                            SubjectId = 10,
                            TermDuration = "Block 5 (5 weeks)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1595)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(905),
                            StatusContent = "Unassigned",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(905)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(907),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(908)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(909),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(910)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(911),
                            StatusContent = "Erroneous",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(911)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(912),
                            StatusContent = "Faultless",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(913)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(914),
                            StatusContent = "Completed",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(914)
                        });
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeanId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FacultyId");

                    b.HasIndex(new[] { "DeanId" }, "IX_Faculties_DeanId");

                    b.ToTable("Faculty");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(941),
                            Description = "Specializes in information technology, software development, and systems engineering.",
                            FacultyName = "IT",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(942)
                        },
                        new
                        {
                            FacultyId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(943),
                            Description = "Focuses on business administration, economics, and financial management.",
                            FacultyName = "BA",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(944)
                        },
                        new
                        {
                            FacultyId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(945),
                            Description = "Offers programs in communication technology and media studies.",
                            FacultyName = "CTT",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(945)
                        },
                        new
                        {
                            FacultyId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(947),
                            Description = "Dedicated to English language studies and cross-cultural communication.",
                            FacultyName = "ENG",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(947)
                        },
                        new
                        {
                            FacultyId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(949),
                            Description = "Specializes in Japanese language, culture, and international relations.",
                            FacultyName = "JPN",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(949)
                        },
                        new
                        {
                            FacultyId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(950),
                            Description = "Focuses on Korean language, culture, and regional studies.",
                            FacultyName = "KOR",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(951)
                        },
                        new
                        {
                            FacultyId = 7,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(952),
                            Description = "Provides training in Chinese language, culture, and business practices.",
                            FacultyName = "CHN",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(952)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("ExamTestDuration")
                        .HasColumnType("time");

                    b.Property<string>("GeneralFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReady")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1630),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1632),
                            ExamId = 1,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1633)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1635),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1636),
                            ExamId = 2,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1636)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1637),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1638),
                            ExamId = 3,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1639)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1640),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1640),
                            ExamId = 11,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1641)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1642),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1643),
                            ExamId = 12,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1643)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1645),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1646),
                            ExamId = 13,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1646)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1647),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1648),
                            ExamId = 14,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1649)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1649),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1650),
                            ExamId = 1,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1651)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1652),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1653),
                            ExamId = 2,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1653)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1654),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1655),
                            ExamId = 3,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1655)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1656),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1657),
                            ExamId = 11,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1658)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1659),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1659),
                            ExamId = 12,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1660)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1661),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1662),
                            ExamId = 13,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1663)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1664),
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1664),
                            ExamId = 14,
                            IsReady = false,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1665)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1692),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1693)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1694),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1695)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1696),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1696)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1697),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1698)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1699),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1699)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1700),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1701)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1702),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1703)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1704),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1704)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1705),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1706)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1708),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1708)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1709),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1710)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1711),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1711)
                        },
                        new
                        {
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1712),
                            MenuLink = "/Admin/SemesterManagement",
                            MenuName = "Semester Management",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1713)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1735),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1735)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1761),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1762)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1763),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1764)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1765),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1765)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1766),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1767)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1768),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1768)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1769),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1770)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1771),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1771)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1772),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1773)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1774),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1775)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1776),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1776)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1777),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1778)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1778),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1779)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1780),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1780)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1781),
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1782)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("ExamId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1809),
                            ExamId = 1,
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1810)
                        },
                        new
                        {
                            ReportId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1812),
                            ExamId = 2,
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1812)
                        },
                        new
                        {
                            ReportId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1814),
                            ExamId = 3,
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1814)
                        },
                        new
                        {
                            ReportId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1816),
                            ExamId = 4,
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1817)
                        },
                        new
                        {
                            ReportId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1818),
                            ExamId = 5,
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1820)
                        },
                        new
                        {
                            ReportId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1821),
                            ExamId = 6,
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1821)
                        });
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.HasIndex(new[] { "ReportId" }, "IX_ReportFiles_ReportId");

                    b.ToTable("ReportFile");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1844),
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2020",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1845)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1847),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2021",
                            StartDate = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1847)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1849),
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2021",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1849)
                        },
                        new
                        {
                            SemesterId = 4,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1851),
                            EndDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2021",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1851)
                        },
                        new
                        {
                            SemesterId = 5,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1853),
                            EndDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2022",
                            StartDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1853)
                        },
                        new
                        {
                            SemesterId = 6,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1855),
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2022",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1855)
                        },
                        new
                        {
                            SemesterId = 7,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1857),
                            EndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2022",
                            StartDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1857)
                        },
                        new
                        {
                            SemesterId = 8,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1859),
                            EndDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2023",
                            StartDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1859)
                        },
                        new
                        {
                            SemesterId = 9,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1861),
                            EndDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2023",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1861)
                        },
                        new
                        {
                            SemesterId = 10,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1863),
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2023",
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1863)
                        },
                        new
                        {
                            SemesterId = 11,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1864),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2024",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1865)
                        },
                        new
                        {
                            SemesterId = 12,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1866),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2024",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1867)
                        },
                        new
                        {
                            SemesterId = 13,
                            CreatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1868),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2024",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1869)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1263),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1265)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1266),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1267)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1268),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1269)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1270),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1270)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1272),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1272)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1273),
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1274)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1275),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1276)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1277),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1277)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1279),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1279)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1281),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1282)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1044),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = true,
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1045)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1050),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Liên Kết",
                            Gender = false,
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1050)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Đà Nẵng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1053),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hoàng Lâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1054)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1057),
                            DateOfBirth = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1057)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1061),
                            DateOfBirth = new DateTime(1991, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Minh Nhân",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1061)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1064),
                            DateOfBirth = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phong Tài",
                            Gender = true,
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1065)
                        },
                        new
                        {
                            UserId = 28,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1068),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hưng Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1069)
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1073),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fe.edu.vn",
                            FullName = "Lành Bích",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1073)
                        },
                        new
                        {
                            UserId = 8,
                            Address = "Hải Phòng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1076),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fe.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1076)
                        },
                        new
                        {
                            UserId = 9,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1079),
                            DateOfBirth = new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoangtm@fe.edu.vn",
                            FullName = "Hoàng Tâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1080)
                        },
                        new
                        {
                            UserId = 10,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1083),
                            DateOfBirth = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhph@fe.edu.vn",
                            FullName = "Minh Phúc",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1084)
                        },
                        new
                        {
                            UserId = 11,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1087),
                            DateOfBirth = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trangnt@fe.edu.vn",
                            FullName = "Trạng Nguyên",
                            Gender = false,
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1087)
                        },
                        new
                        {
                            UserId = 27,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1091),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fe.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1092)
                        },
                        new
                        {
                            UserId = 30,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1095),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fe.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1095)
                        },
                        new
                        {
                            UserId = 12,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1122),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fe.edu.vn",
                            FullName = "Nam Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1122)
                        },
                        new
                        {
                            UserId = 13,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1126),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fe.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1126)
                        },
                        new
                        {
                            UserId = 14,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1129),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fe.edu.vn",
                            FullName = "Huy Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1130)
                        },
                        new
                        {
                            UserId = 15,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1133),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fe.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1134)
                        },
                        new
                        {
                            UserId = 16,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1138),
                            DateOfBirth = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "ngocdt@fe.edu.vn",
                            FullName = "Ngọc Đình",
                            Gender = false,
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1138)
                        },
                        new
                        {
                            UserId = 17,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1141),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhth@fe.edu.vn",
                            FullName = "Minh Thảo",
                            Gender = false,
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1142)
                        },
                        new
                        {
                            UserId = 18,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1145),
                            DateOfBirth = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "binhlt@fe.edu.vn",
                            FullName = "Bình Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1145)
                        },
                        new
                        {
                            UserId = 19,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1148),
                            DateOfBirth = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhnv@fe.edu.vn",
                            FullName = "Lan Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1149)
                        },
                        new
                        {
                            UserId = 20,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1178),
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "duongkt@fe.edu.vn",
                            FullName = "Dương Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1178)
                        },
                        new
                        {
                            UserId = 21,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1183),
                            DateOfBirth = new DateTime(1992, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phuonglt@fe.edu.vn",
                            FullName = "Phương Linh",
                            Gender = false,
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1183)
                        },
                        new
                        {
                            UserId = 29,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1186),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fe.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1187)
                        },
                        new
                        {
                            UserId = 31,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1190),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fe.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1191)
                        },
                        new
                        {
                            UserId = 22,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1193),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1194)
                        },
                        new
                        {
                            UserId = 23,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1197),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1197)
                        },
                        new
                        {
                            UserId = 24,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1201),
                            DateOfBirth = new DateTime(1991, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Phát",
                            Gender = true,
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1201)
                        },
                        new
                        {
                            UserId = 25,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1204),
                            DateOfBirth = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Tùng",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1205)
                        },
                        new
                        {
                            UserId = 26,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1221),
                            DateOfBirth = new DateTime(1993, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Trương Vĩnh",
                            Gender = true,
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(1222)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(976),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(977)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(979),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(980)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(981),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(981)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(982),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(983)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(985),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 11, 5, 11, 44, 34, 439, DateTimeKind.Local).AddTicks(985)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_CampusUserSubject_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_Exams_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.HasOne("Library.Models.User", "Dean")
                        .WithMany("Faculties")
                        .HasForeignKey("DeanId");

                    b.Navigation("Dean");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "AssignStatus")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignStatus");

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("Reports")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK_Reports_Exams");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Library.Models.ReportFile", b =>
                {
                    b.HasOne("Library.Models.Report", "Report")
                        .WithMany("ReportFiles")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.HasOne("Library.Models.Faculty", null)
                        .WithMany("Subjects")
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.Faculty", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Navigation("ReportFiles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Faculties");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
