// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    partial class QuizManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Ha Noi",
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3328),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3348)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Da Nang",
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3351),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3352)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Can Tho",
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3355),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3356)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Ho Chi Minh",
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3359),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3360)
                        },
                        new
                        {
                            CampusId = 5,
                            CampusName = "Quy Nhon",
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3362),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3363)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLecturer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CampusId" }, "IX_CampusUserSubject_CampusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_CampusUserSubject_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_CampusUserSubject_SubjectId");

                    b.HasIndex(new[] { "UserId" }, "IX_CampusUserSubject_UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 29
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 29
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 29
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 31
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 31
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 3,
                            SubjectId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 6,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 7,
                            UserId = 27
                        },
                        new
                        {
                            Id = 18,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 8,
                            UserId = 27
                        },
                        new
                        {
                            Id = 19,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 9,
                            UserId = 27
                        },
                        new
                        {
                            Id = 20,
                            CampusId = 1,
                            IsLecturer = true,
                            SemesterId = 4,
                            SubjectId = 10,
                            UserId = 27
                        },
                        new
                        {
                            Id = 21,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 22,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 2,
                            UserId = 16
                        },
                        new
                        {
                            Id = 23,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 24,
                            CampusId = 3,
                            SemesterId = 5,
                            SubjectId = 4,
                            UserId = 16
                        },
                        new
                        {
                            Id = 25,
                            CampusId = 3,
                            SubjectId = 5,
                            UserId = 16
                        },
                        new
                        {
                            Id = 26,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 6,
                            UserId = 17
                        },
                        new
                        {
                            Id = 27,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 7,
                            UserId = 17
                        },
                        new
                        {
                            Id = 28,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 29,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 9,
                            UserId = 17
                        },
                        new
                        {
                            Id = 30,
                            CampusId = 3,
                            SemesterId = 6,
                            SubjectId = 10,
                            UserId = 17
                        },
                        new
                        {
                            Id = 31,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 1,
                            UserId = 18
                        },
                        new
                        {
                            Id = 32,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 2,
                            UserId = 18
                        },
                        new
                        {
                            Id = 33,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 34,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 35,
                            CampusId = 4,
                            SemesterId = 7,
                            SubjectId = 5,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 37,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 8,
                            UserId = 19
                        },
                        new
                        {
                            Id = 39,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 9,
                            UserId = 19
                        },
                        new
                        {
                            Id = 40,
                            CampusId = 4,
                            SemesterId = 8,
                            SubjectId = 10,
                            UserId = 19
                        },
                        new
                        {
                            Id = 41,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 1,
                            UserId = 20
                        },
                        new
                        {
                            Id = 42,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 2,
                            UserId = 20
                        },
                        new
                        {
                            Id = 43,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 3,
                            UserId = 20
                        },
                        new
                        {
                            Id = 44,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 4,
                            UserId = 20
                        },
                        new
                        {
                            Id = 45,
                            CampusId = 5,
                            SemesterId = 9,
                            SubjectId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 46,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 6,
                            UserId = 21
                        },
                        new
                        {
                            Id = 47,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 7,
                            UserId = 21
                        },
                        new
                        {
                            Id = 48,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 8,
                            UserId = 21
                        },
                        new
                        {
                            Id = 49,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 9,
                            UserId = 21
                        },
                        new
                        {
                            Id = 50,
                            CampusId = 5,
                            SemesterId = 10,
                            SubjectId = 10,
                            UserId = 21
                        },
                        new
                        {
                            Id = 51,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 52,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 53,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 54,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 55,
                            CampusId = 2,
                            SemesterId = 1,
                            SubjectId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 56,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 6,
                            UserId = 15
                        },
                        new
                        {
                            Id = 57,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 7,
                            UserId = 15
                        },
                        new
                        {
                            Id = 58,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 8,
                            UserId = 15
                        },
                        new
                        {
                            Id = 59,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 9,
                            UserId = 15
                        },
                        new
                        {
                            Id = 60,
                            CampusId = 2,
                            SemesterId = 2,
                            SubjectId = 10,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Exams_CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SemesterId" }, "IX_Exams_SemesterId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4732),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4731),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4729),
                            ExamCode = "PRN211_Q1_10_123456",
                            ExamDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4730),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4734)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4744),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4743),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4741),
                            ExamCode = "PRN211_Q2_5_654321",
                            ExamDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 5,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4742),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4745)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4752),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4751),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4749),
                            ExamCode = "PRN221_Q1_10_789012",
                            ExamDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 6,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4750),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4753)
                        },
                        new
                        {
                            ExamId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4759),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4758),
                            ExamCode = "PRN221_Q2_5_210987",
                            ExamDate = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4757),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4760)
                        },
                        new
                        {
                            ExamId = 5,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4766),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4765),
                            ExamCode = "PRN231_Q1_10_345678",
                            ExamDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4764),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4767)
                        },
                        new
                        {
                            ExamId = 6,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4775),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4774),
                            ExamCode = "PRN231_Q2_5_876543",
                            ExamDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4773),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4776)
                        },
                        new
                        {
                            ExamId = 7,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4782),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4781),
                            ExamCode = "MAE101_Q1_10_234567",
                            ExamDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4780),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4783)
                        },
                        new
                        {
                            ExamId = 8,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4790),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4788),
                            ExamCode = "MAE101_Q2_5_765432",
                            ExamDate = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4787),
                            SubjectId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4791)
                        },
                        new
                        {
                            ExamId = 9,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4797),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4796),
                            ExamCode = "NWC203c_Q1_10_345678",
                            ExamDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4795),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4798)
                        },
                        new
                        {
                            ExamId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4805),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4804),
                            ExamCode = "NWC203c_Q2_5_876543",
                            ExamDate = new DateTime(2024, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 1,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4803),
                            SubjectId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4806)
                        },
                        new
                        {
                            ExamId = 11,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4813),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4812),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4810),
                            ExamCode = "ENM401_Q1_10_111222",
                            ExamDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4811),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4814)
                        },
                        new
                        {
                            ExamId = 12,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4821),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4820),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4818),
                            ExamCode = "ENM401_Q2_5_222111",
                            ExamDate = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Reading",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4819),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4823)
                        },
                        new
                        {
                            ExamId = 13,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4830),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4829),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4827),
                            ExamCode = "ENM401_Q3_7_222333",
                            ExamDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Writing",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4828),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4831)
                        },
                        new
                        {
                            ExamId = 14,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4839),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4838),
                            EstimatedTimeTest = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4835),
                            ExamCode = "ENM401_Q4_9_333111",
                            ExamDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 7,
                            ExamType = "Listening",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4837),
                            SubjectId = 6,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4839)
                        },
                        new
                        {
                            ExamId = 15,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4846),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4845),
                            ExamCode = "ECO121_Q1_10_333444",
                            ExamDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4844),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4847)
                        },
                        new
                        {
                            ExamId = 16,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4853),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4852),
                            ExamCode = "ECO121_Q2_5_444333",
                            ExamDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4851),
                            SubjectId = 7,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4854)
                        },
                        new
                        {
                            ExamId = 17,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4860),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4859),
                            ExamCode = "ECO201_Q1_10_555666",
                            ExamDate = new DateTime(2024, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4858),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4861)
                        },
                        new
                        {
                            ExamId = 18,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4868),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4866),
                            ExamCode = "ECO201_Q2_5_666555",
                            ExamDate = new DateTime(2024, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4866),
                            SubjectId = 8,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4869)
                        },
                        new
                        {
                            ExamId = 19,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4875),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4875),
                            ExamCode = "ACC101_Q1_10_777888",
                            ExamDate = new DateTime(2024, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4874),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4876)
                        },
                        new
                        {
                            ExamId = 20,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4883),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4882),
                            ExamCode = "ACC101_Q2_5_888777",
                            ExamDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4881),
                            SubjectId = 9,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4883)
                        },
                        new
                        {
                            ExamId = 21,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4890),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4889),
                            ExamCode = "MKT101_Q1_10_999000",
                            ExamDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4888),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4891)
                        },
                        new
                        {
                            ExamId = 22,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4898),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4897),
                            ExamCode = "MKT101_Q2_5_000999",
                            ExamDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            SemesterId = 2,
                            StartDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4896),
                            SubjectId = 10,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4899)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3772),
                            StatusContent = "Unassigned",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3774)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3778),
                            StatusContent = "Pending",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3779)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3782),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3783)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3786),
                            StatusContent = "Reviewed",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3787)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3789),
                            StatusContent = "Erroneous",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3790)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3793),
                            StatusContent = "Faultless",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3795)
                        },
                        new
                        {
                            ExamStatusId = 7,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3800),
                            StatusContent = "Completed",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3801)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("AssignStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("ExamTestDuration")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignStatusId" }, "IX_InstructorAssignments_AssignStatusId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4973),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4977),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4979)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4982),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4983),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4984)
                        },
                        new
                        {
                            AssignmentId = 3,
                            AssignStatusId = 3,
                            AssignedUserId = 12,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4987),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4988),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4989)
                        },
                        new
                        {
                            AssignmentId = 4,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4991),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4993),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4994)
                        },
                        new
                        {
                            AssignmentId = 5,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4996),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4998),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4998)
                        },
                        new
                        {
                            AssignmentId = 6,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5001),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5002),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5003)
                        },
                        new
                        {
                            AssignmentId = 7,
                            AssignStatusId = 3,
                            AssignedUserId = 13,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5005),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5007),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5008)
                        },
                        new
                        {
                            AssignmentId = 8,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5010),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5012),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5013)
                        },
                        new
                        {
                            AssignmentId = 9,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5016),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5017),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5018)
                        },
                        new
                        {
                            AssignmentId = 10,
                            AssignStatusId = 4,
                            AssignedUserId = 7,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5020),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5022),
                            ExamId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5023)
                        },
                        new
                        {
                            AssignmentId = 11,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5081),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5083),
                            ExamId = 11,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5084)
                        },
                        new
                        {
                            AssignmentId = 12,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5086),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5088),
                            ExamId = 12,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5089)
                        },
                        new
                        {
                            AssignmentId = 13,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5091),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5092),
                            ExamId = 13,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5093)
                        },
                        new
                        {
                            AssignmentId = 14,
                            AssignStatusId = 4,
                            AssignedUserId = 27,
                            AssignmentDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5095),
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5097),
                            ExamId = 14,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5098)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5153),
                            MenuLink = "/usermanagement",
                            MenuName = "User Management",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5155)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5159),
                            MenuLink = "/Admin/History",
                            MenuName = "User Log",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5160)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5162),
                            MenuLink = "/Examiner/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5163)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5165),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Exam Assign",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5166)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5168),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "List Asigned",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5169)
                        },
                        new
                        {
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5171),
                            MenuLink = "/HeadDepartment/Report",
                            MenuName = "View Report",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5172)
                        },
                        new
                        {
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5174),
                            MenuLink = "/HeadDepartment/ExamStatus",
                            MenuName = "Exam Status",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5175)
                        },
                        new
                        {
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5177),
                            MenuLink = "/Examiner/usermanagement",
                            MenuName = "Head Department Management",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5178)
                        },
                        new
                        {
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5180),
                            MenuLink = "/Admin/CampusManagement",
                            MenuName = "Campus Management",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5181)
                        },
                        new
                        {
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5183),
                            MenuLink = "/Examiner/Create",
                            MenuName = "Create Exam",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5184)
                        },
                        new
                        {
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5186),
                            MenuLink = "/HeadDepartment/lectureManagement",
                            MenuName = "Lecture Management(UnderContrucst)",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5187)
                        },
                        new
                        {
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5189),
                            MenuLink = "/Examiner/Statistical",
                            MenuName = "Statistical",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5190)
                        },
                        new
                        {
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5192),
                            MenuLink = "/Admin/SemesterManagement",
                            MenuName = "Semester Management",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5193)
                        },
                        new
                        {
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5196),
                            MenuLink = "/Admin/SubjectManagement",
                            MenuName = "Subject Management",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5197)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5244),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5245)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5247),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5248)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 8,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5250),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5251)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 9,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5253),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5254)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 14,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5256),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5257)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5258),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5259)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 10,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5261),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5262)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5264),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5265)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 6,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5267),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5267)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 7,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5269),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5270)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 11,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5272),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5273)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 13,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5275),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5276)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 12,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5279),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5280)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5281),
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5282)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            AssignmentId = 8,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5330),
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Correct the code snippet by replacing 'Console.Writeline' with 'Console.WriteLine'.",
                            ReportContent = "In PRN211, question 1 contains an incorrect code snippet that causes compilation errors.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5331)
                        },
                        new
                        {
                            ReportId = 2,
                            AssignmentId = 9,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5336),
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Revise the logic to ensure it follows the proper algorithmic steps.",
                            ReportContent = "In PRN211, question 2 has an outdated logic that leads to incorrect output.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5337)
                        },
                        new
                        {
                            ReportId = 3,
                            AssignmentId = 11,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5340),
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Provide a more detailed explanation of how supply and demand interact in a market.",
                            ReportContent = "In ENM401, question 1 fails to explain the principle of supply and demand adequately.",
                            Score = 9f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5341)
                        },
                        new
                        {
                            ReportId = 4,
                            AssignmentId = 12,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5343),
                            QuestionNumber = 4,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 2 has an error in the calculation of equilibrium price.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5344)
                        },
                        new
                        {
                            ReportId = 5,
                            AssignmentId = 13,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5348),
                            QuestionNumber = 5,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 3 has an error in the calculation.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5349)
                        },
                        new
                        {
                            ReportId = 6,
                            AssignmentId = 14,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5351),
                            QuestionNumber = 6,
                            QuestionSolutionDetail = "Revise the calculation method to correctly reflect the intersection of supply and demand curves.",
                            ReportContent = "In ENM401, question 4 has an error.",
                            Score = 8f,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5352)
                        });
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester", (string)null);

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5401),
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2020",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5402)
                        },
                        new
                        {
                            SemesterId = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5407),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2021",
                            StartDate = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5407)
                        },
                        new
                        {
                            SemesterId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5410),
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2021",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5411)
                        },
                        new
                        {
                            SemesterId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5414),
                            EndDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2021",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5415)
                        },
                        new
                        {
                            SemesterId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5418),
                            EndDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2022",
                            StartDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5419)
                        },
                        new
                        {
                            SemesterId = 6,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5422),
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2022",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5423)
                        },
                        new
                        {
                            SemesterId = 7,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5426),
                            EndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2022",
                            StartDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5426)
                        },
                        new
                        {
                            SemesterId = 8,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5430),
                            EndDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2023",
                            StartDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5430)
                        },
                        new
                        {
                            SemesterId = 9,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5434),
                            EndDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2023",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5434)
                        },
                        new
                        {
                            SemesterId = 10,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5438),
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2023",
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5439)
                        },
                        new
                        {
                            SemesterId = 11,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5442),
                            EndDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Spring2024",
                            StartDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5442)
                        },
                        new
                        {
                            SemesterId = 12,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5503),
                            EndDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Summer2024",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5504)
                        },
                        new
                        {
                            SemesterId = 13,
                            CreatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5507),
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            SemesterName = "Fall2024",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(5508)
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4245),
                            SubjectCode = "PRN211",
                            SubjectName = "Basic Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4246)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4249),
                            SubjectCode = "PRN221",
                            SubjectName = "Advanced Cross-Platform Application Programming With .NET",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4250)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4252),
                            SubjectCode = "PRN231",
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4253)
                        },
                        new
                        {
                            SubjectId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4257),
                            SubjectCode = "MAE101",
                            SubjectName = "Mathematics for Engineering",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4257)
                        },
                        new
                        {
                            SubjectId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4260),
                            SubjectCode = "NWC203c",
                            SubjectName = "Computer Networking",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4261)
                        },
                        new
                        {
                            SubjectId = 6,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4263),
                            SubjectCode = "ENM401",
                            SubjectName = "Business English",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4264)
                        },
                        new
                        {
                            SubjectId = 7,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4266),
                            SubjectCode = "ECO121",
                            SubjectName = "Basic Macro Economics",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4267)
                        },
                        new
                        {
                            SubjectId = 8,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4271),
                            SubjectCode = "ECO201",
                            SubjectName = "International Economics",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4272)
                        },
                        new
                        {
                            SubjectId = 9,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4382),
                            SubjectCode = "ACC101",
                            SubjectName = "Principles of Accounting",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4384)
                        },
                        new
                        {
                            SubjectId = 10,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4387),
                            SubjectCode = "MKT101",
                            SubjectName = "Marketing Principles",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4388)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "CampusId" }, "IX_Users_CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3920),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Admin",
                            Gender = true,
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3921)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3931),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Liên Kết",
                            Gender = false,
                            IsActive = true,
                            Mail = "lienkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3932)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Đà Nẵng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3938),
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hoàng Lâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoanglm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3939)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3945),
                            DateOfBirth = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhnq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3946)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3956),
                            DateOfBirth = new DateTime(1991, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Minh Nhân",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhnh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3957)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3964),
                            DateOfBirth = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phong Tài",
                            Gender = true,
                            IsActive = true,
                            Mail = "phongtl@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3965)
                        },
                        new
                        {
                            UserId = 28,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3970),
                            DateOfBirth = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hưng Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "hunglthe160235@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3971)
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3976),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhbt@fe.edu.vn",
                            FullName = "Lành Bích",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhbt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3977)
                        },
                        new
                        {
                            UserId = 8,
                            Address = "Hải Phòng",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3982),
                            DateOfBirth = new DateTime(1988, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "khoadt@fe.edu.vn",
                            FullName = "Khoa Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "khoadt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3983)
                        },
                        new
                        {
                            UserId = 9,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3988),
                            DateOfBirth = new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "hoangtm@fe.edu.vn",
                            FullName = "Hoàng Tâm",
                            Gender = true,
                            IsActive = true,
                            Mail = "hoangtm@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3989)
                        },
                        new
                        {
                            UserId = 10,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3994),
                            DateOfBirth = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhph@fe.edu.vn",
                            FullName = "Minh Phúc",
                            Gender = true,
                            IsActive = true,
                            Mail = "minhph@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3995)
                        },
                        new
                        {
                            UserId = 11,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4002),
                            DateOfBirth = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trangnt@fe.edu.vn",
                            FullName = "Trạng Nguyên",
                            Gender = false,
                            IsActive = true,
                            Mail = "trangnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4003)
                        },
                        new
                        {
                            UserId = 27,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4051),
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quanpt@fe.edu.vn",
                            FullName = "Quân Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "quanpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4052)
                        },
                        new
                        {
                            UserId = 30,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4058),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "trungpxhs160623@fe.edu.vn",
                            FullName = "Trung Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "trungpxhs160623@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4059)
                        },
                        new
                        {
                            UserId = 12,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4065),
                            DateOfBirth = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "namlh@fe.edu.vn",
                            FullName = "Nam Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "namlh@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4066)
                        },
                        new
                        {
                            UserId = 13,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4071),
                            DateOfBirth = new DateTime(1986, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "quangnv@fe.edu.vn",
                            FullName = "Quang Nguyễn",
                            Gender = true,
                            IsActive = true,
                            Mail = "quangnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4072)
                        },
                        new
                        {
                            UserId = 14,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4077),
                            DateOfBirth = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "huylt@fe.edu.vn",
                            FullName = "Huy Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "huylt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4078)
                        },
                        new
                        {
                            UserId = 15,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4085),
                            DateOfBirth = new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanpv@fe.edu.vn",
                            FullName = "Tuấn Phạm",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4086)
                        },
                        new
                        {
                            UserId = 16,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4091),
                            DateOfBirth = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "ngocdt@fe.edu.vn",
                            FullName = "Ngọc Đình",
                            Gender = false,
                            IsActive = true,
                            Mail = "ngocdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4092)
                        },
                        new
                        {
                            UserId = 17,
                            Address = "Nha Trang",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4098),
                            DateOfBirth = new DateTime(1989, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "minhth@fe.edu.vn",
                            FullName = "Minh Thảo",
                            Gender = false,
                            IsActive = true,
                            Mail = "minhth@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4099)
                        },
                        new
                        {
                            UserId = 18,
                            Address = "Cần Thơ",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4104),
                            DateOfBirth = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "binhlt@fe.edu.vn",
                            FullName = "Bình Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "binhlt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4105)
                        },
                        new
                        {
                            UserId = 19,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4110),
                            DateOfBirth = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "lanhnv@fe.edu.vn",
                            FullName = "Lan Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "lanhnv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4111)
                        },
                        new
                        {
                            UserId = 20,
                            Address = "Huế",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4116),
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "duongkt@fe.edu.vn",
                            FullName = "Dương Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "duongkt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4117)
                        },
                        new
                        {
                            UserId = 21,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4123),
                            DateOfBirth = new DateTime(1992, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "phuonglt@fe.edu.vn",
                            FullName = "Phương Linh",
                            Gender = false,
                            IsActive = true,
                            Mail = "phuonglt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4124)
                        },
                        new
                        {
                            UserId = 29,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4129),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tuanlmhe161245@fe.edu.vn",
                            FullName = "Tuấn Lê",
                            Gender = true,
                            IsActive = true,
                            Mail = "tuanlmhe161245@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4130)
                        },
                        new
                        {
                            UserId = 31,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4137),
                            DateOfBirth = new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailFe = "tungtkHS163077@fe.edu.vn",
                            FullName = "Tùng Khoa",
                            Gender = true,
                            IsActive = true,
                            Mail = "tungtkHS163077@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4138)
                        },
                        new
                        {
                            UserId = 22,
                            Address = "Hà Nội",
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4144),
                            DateOfBirth = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phúc Đạt",
                            Gender = true,
                            IsActive = true,
                            Mail = "phucdt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4145)
                        },
                        new
                        {
                            UserId = 23,
                            Address = "TP Hồ Chí Minh",
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4150),
                            DateOfBirth = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thanh Nguyễn",
                            Gender = false,
                            IsActive = true,
                            Mail = "thanhnt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4151)
                        },
                        new
                        {
                            UserId = 24,
                            Address = "Đà Nẵng",
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4156),
                            DateOfBirth = new DateTime(1991, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hùng Phát",
                            Gender = true,
                            IsActive = true,
                            Mail = "hungpv@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4158)
                        },
                        new
                        {
                            UserId = 25,
                            Address = "Nha Trang",
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4163),
                            DateOfBirth = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anh Tùng",
                            Gender = true,
                            IsActive = true,
                            Mail = "anhpt@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4164)
                        },
                        new
                        {
                            UserId = 26,
                            Address = "Cần Thơ",
                            CampusId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4169),
                            DateOfBirth = new DateTime(1993, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Trương Vĩnh",
                            Gender = true,
                            IsActive = true,
                            Mail = "truongvq@fpt.edu.vn",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(4170)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserHistory_UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3848),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3850)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3852),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3854)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3856),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3857)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3859),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3860)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3863),
                            RoleName = "Curriculum Development",
                            UpdateDate = new DateTime(2024, 10, 25, 18, 43, 53, 883, DateTimeKind.Local).AddTicks(3864)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_CampusUserSubject_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_Exams_Semesters");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");

                    b.Navigation("ExamStatus");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.InstructorAssignment", "Assignment")
                        .WithMany("Reports")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK_Reports_InstructorAssignments");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Semester", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
