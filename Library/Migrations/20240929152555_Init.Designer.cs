// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(QuizManagementContext))]
    [Migration("20240929152555_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            CampusName = "Hòa Lạc",
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8275),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8288)
                        },
                        new
                        {
                            CampusId = 2,
                            CampusName = "Đà Nẵng",
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8290),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8291)
                        },
                        new
                        {
                            CampusId = 3,
                            CampusName = "Cần Thơ",
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8292),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8293)
                        },
                        new
                        {
                            CampusId = 4,
                            CampusName = "Hồ Chí Minh",
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8295),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8295)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("CampusUserSubject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            SubjectId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            SubjectId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            SubjectId = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            SubjectId = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 1,
                            SubjectId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 2,
                            SubjectId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 3,
                            SubjectId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 4,
                            SubjectId = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 2,
                            SubjectId = 3,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeTest")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExamDuration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExamType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex("CampusId");

                    b.HasIndex(new[] { "CreaterId" }, "IX_Exams_CreaterId");

                    b.HasIndex(new[] { "ExamStatusId" }, "IX_Exams_ExamStatusId");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Exams_SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8658),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8658),
                            EstimatedTimeTest = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8656),
                            ExamCode = "EXAM001",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Writing",
                            StartDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8657),
                            SubjectId = 1,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8659)
                        },
                        new
                        {
                            ExamId = 2,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8663),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8663),
                            EstimatedTimeTest = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8661),
                            ExamCode = "EXAM002",
                            ExamDuration = "Block 10 (10 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8662),
                            SubjectId = 2,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8664)
                        },
                        new
                        {
                            ExamId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8668),
                            CreaterId = 2,
                            EndDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8667),
                            EstimatedTimeTest = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8666),
                            ExamCode = "EXAM003",
                            ExamDuration = "Block 5 (5 weeks)",
                            ExamStatusId = 1,
                            ExamType = "Multiple Choice",
                            StartDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8666),
                            SubjectId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8668)
                        });
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Property<int>("ExamStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamStatusId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamStatusId");

                    b.ToTable("ExamStatuses");

                    b.HasData(
                        new
                        {
                            ExamStatusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8418),
                            StatusContent = "Not Assign",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8420)
                        },
                        new
                        {
                            ExamStatusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8421),
                            StatusContent = "Waiting to Assign",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8422)
                        },
                        new
                        {
                            ExamStatusId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8423),
                            StatusContent = "Assigned",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8423)
                        },
                        new
                        {
                            ExamStatusId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8424),
                            StatusContent = "Reviewing",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8425)
                        },
                        new
                        {
                            ExamStatusId = 5,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8426),
                            StatusContent = "Finish Review",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8427)
                        },
                        new
                        {
                            ExamStatusId = 6,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8428),
                            StatusContent = "Complete",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8428)
                        });
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "AssignedUserId" }, "IX_InstructorAssignments_AssignedTo");

                    b.HasIndex(new[] { "ExamId" }, "IX_InstructorAssignments_ExamId");

                    b.ToTable("InstructorAssignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8692),
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8693),
                            ExamId = 1,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8694)
                        },
                        new
                        {
                            AssignmentId = 2,
                            AssignedUserId = 3,
                            AssignmentDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8695),
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8696),
                            ExamId = 2,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8696)
                        });
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProgram")
                        .HasColumnType("bit");

                    b.Property<string>("MenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8716),
                            MenuLink = "/usermanagement",
                            MenuName = "User management",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8716)
                        },
                        new
                        {
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8718),
                            MenuLink = "/Admin/History",
                            MenuName = "History",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8718)
                        },
                        new
                        {
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8720),
                            MenuLink = "/TestDepartment/ExamList",
                            MenuName = "Exam List",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8720)
                        },
                        new
                        {
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8721),
                            MenuLink = "/HeadDepartment/ExamList",
                            MenuName = "Head Department List",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8722)
                        },
                        new
                        {
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8723),
                            MenuLink = "/Lecture/ExamList",
                            MenuName = "Lecture List",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8723)
                        });
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex(new[] { "MenuId" }, "IX_MenuRoles_MenuId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            MenuId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8748),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8749)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8750),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8751)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8752),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8752)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8753),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8754)
                        },
                        new
                        {
                            RoleId = 1,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8755),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8755)
                        },
                        new
                        {
                            RoleId = 2,
                            MenuId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8756),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8756)
                        },
                        new
                        {
                            RoleId = 3,
                            MenuId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8757),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8758)
                        },
                        new
                        {
                            RoleId = 4,
                            MenuId = 5,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8759),
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8759)
                        });
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSolutionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex(new[] { "ExamId" }, "IX_Reports_ExamId");

                    b.HasIndex(new[] { "UserId" }, "IX_Reports_UserId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8782),
                            ExamId = 1,
                            QuestionNumber = 1,
                            QuestionSolutionDetail = "Solution explanation 1",
                            ReportContent = "Report 1",
                            Score = 90f,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8783),
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8785),
                            ExamId = 2,
                            QuestionNumber = 2,
                            QuestionSolutionDetail = "Solution explanation 2",
                            ReportContent = "Report 2",
                            Score = 85f,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8786),
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8787),
                            ExamId = 3,
                            QuestionNumber = 3,
                            QuestionSolutionDetail = "Solution explanation 3",
                            ReportContent = "Report 3",
                            Score = 75f,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8788),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8597),
                            SubjectCode = "PRN231",
                            SubjectName = "C# Programming",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8599)
                        },
                        new
                        {
                            SubjectId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8600),
                            SubjectCode = "CSI123",
                            SubjectName = "Computer Science",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8601)
                        },
                        new
                        {
                            SubjectId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8602),
                            SubjectCode = "MLN123",
                            SubjectName = "Machine Learning",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8603)
                        });
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("CampusId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8490),
                            IsActive = true,
                            Mail = "admin@fpt.edu.vn",
                            RoleId = 1,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8491)
                        },
                        new
                        {
                            UserId = 2,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8493),
                            IsActive = true,
                            Mail = "examiner@fpt.edu.vn",
                            RoleId = 2,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8494)
                        },
                        new
                        {
                            UserId = 3,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8496),
                            IsActive = true,
                            Mail = "lecturer1@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8497)
                        },
                        new
                        {
                            UserId = 4,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8499),
                            IsActive = true,
                            Mail = "lecturer2@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8499)
                        },
                        new
                        {
                            UserId = 5,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8502),
                            IsActive = true,
                            Mail = "lecturer3@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8502)
                        },
                        new
                        {
                            UserId = 6,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8504),
                            IsActive = true,
                            Mail = "lecturer4@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8505)
                        },
                        new
                        {
                            UserId = 7,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8507),
                            IsActive = true,
                            Mail = "lecturer5@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8508)
                        },
                        new
                        {
                            UserId = 8,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8510),
                            IsActive = true,
                            Mail = "lecturer6@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8511)
                        },
                        new
                        {
                            UserId = 9,
                            CampusId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8513),
                            IsActive = true,
                            Mail = "lecturer7@fpt.edu.vn",
                            RoleId = 3,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8514)
                        },
                        new
                        {
                            UserId = 10,
                            CampusId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8516),
                            IsActive = true,
                            Mail = "head@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8516)
                        },
                        new
                        {
                            UserId = 11,
                            CampusId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8518),
                            IsActive = true,
                            Mail = "developer@fpt.edu.vn",
                            RoleId = 5,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8519)
                        },
                        new
                        {
                            UserId = 12,
                            CampusId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8521),
                            IsActive = true,
                            Mail = "trunghp@fpt.edu.vn",
                            RoleId = 4,
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8521)
                        });
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogDt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistory", (string)null);
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8454),
                            RoleName = "Admin",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8455)
                        },
                        new
                        {
                            RoleId = 2,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8457),
                            RoleName = "Examiner",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8458)
                        },
                        new
                        {
                            RoleId = 3,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8459),
                            RoleName = "Lecturer",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8460)
                        },
                        new
                        {
                            RoleId = 4,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8461),
                            RoleName = "Head of Department",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8461)
                        },
                        new
                        {
                            RoleId = 5,
                            CreateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8463),
                            RoleName = "Program Developer",
                            UpdateDate = new DateTime(2024, 9, 29, 22, 25, 55, 646, DateTimeKind.Local).AddTicks(8463)
                        });
                });

            modelBuilder.Entity("Library.Models.CampusUserSubject", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_CampusUserSubject_Campuses");

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CampusUserSubject_Subjects");

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("CampusUserSubjects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CampusUserSubject_Users");

                    b.Navigation("Campus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Exams")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Exams_Campuses");

                    b.HasOne("Library.Models.User", "Creater")
                        .WithMany("Exams")
                        .HasForeignKey("CreaterId")
                        .IsRequired();

                    b.HasOne("Library.Models.ExamStatus", "ExamStatus")
                        .WithMany("Exams")
                        .HasForeignKey("ExamStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Campus");

                    b.Navigation("Creater");

                    b.Navigation("ExamStatus");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Library.Models.InstructorAssignment", b =>
                {
                    b.HasOne("Library.Models.User", "AssignedUser")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("AssignedUserId")
                        .IsRequired()
                        .HasConstraintName("FK_InstructorAssignments_Users_AssignedTo");

                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("InstructorAssignments")
                        .HasForeignKey("ExamId")
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Library.Models.MenuRole", b =>
                {
                    b.HasOne("Library.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.Report", b =>
                {
                    b.HasOne("Library.Models.Exam", "Exam")
                        .WithMany("Reports")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.HasOne("Library.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasConstraintName("FK_Users_Campuses");

                    b.HasOne("Library.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Library.Models.UserHistory", b =>
                {
                    b.HasOne("Library.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserHistory_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Models.Campus", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Models.Exam", b =>
                {
                    b.Navigation("InstructorAssignments");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Library.Models.ExamStatus", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Library.Models.Subject", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Library.Models.User", b =>
                {
                    b.Navigation("CampusUserSubjects");

                    b.Navigation("Exams");

                    b.Navigation("InstructorAssignments");

                    b.Navigation("Reports");

                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Library.Models.UserRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
