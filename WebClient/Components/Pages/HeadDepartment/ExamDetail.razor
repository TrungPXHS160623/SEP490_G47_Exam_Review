<style>
    .form-group {
        display: flex;
        align-items: center
    }

    .mud-input.mud-disabled {
        background-color: rgba(0, 0, 0, 0.1);
        color: black;
    }
</style>
<MudDialog>
    <DialogContent>
        <div class="form-group mb-4">
            <label class="col-3">Exam Code:</label>
            <MudText>@exam.ExamCode</MudText>
        </div>

        <div class="form-group mb-4">
            <label class="col-3">Subject Name:</label>
            <MudText>@($"[{exam.SubjectCode}] {exam.SubjectName}")</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Exam Creater:</label>
            <MudText>@(exam.CreaterName ?? "N/A")</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Head of Department:</label>
            <MudText>@(exam.HeadDepartmentName ?? "N/A")</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Status:</label>
            <MudText>@exam.ExamStatusContent</MudText>
        </div>
           <div class="form-group mb-4">
               <label class="col-3">Campus:</label>
               <MudText>@exam.CampusName</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Exam Duration:</label>
            <MudText>@exam.ExamDuration</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Exam Type:</label>
            <MudText>@exam.ExamType</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Exam Estimate Date:</label>
            <MudText>@(exam.EstimatedTimeTest.HasValue ? exam.EstimatedTimeTest.Value.ToString("dd-MM-yyyy") : "N/A")</MudText>
        </div>
        <div class="form-group mb-4">
            <label class="col-3">Start Date:</label>
            <MudText>@(exam.StartDate.HasValue ? exam.StartDate.Value.ToString("dd-MM-yyyy") : "N/A")</MudText>
         </div>
         <div class="form-group mb-4">
             <label class="col-3">End Date:</label>
             <MudText>@(exam.EndDate.HasValue ? exam.EndDate.Value.ToString("dd-MM-yyyy") : "N/A")</MudText>
         </div>
     </DialogContent>
     <DialogActions>
         <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit" class="btn btn-block col-3" Variant="Variant.Filled" OnClick=Excute Disabled="@_processing">
             @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Saving</MudText>
            }
            else
            {
                <MudText>Assign Now</MudText>
            }
        </MudButton>
        <MudButton Color="Color.Error" OnClick="Cancel" Class="col-3 btn btn-block" Variant="Variant.Outlined">Cancel</MudButton>
    </DialogActions>
</MudDialog>



@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public int? ExamId { get; set; }

    private bool _processing = false;

    private TestDepartmentExamResponse exam = new TestDepartmentExamResponse();

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        
    }

    public async Task Excute()
    {
        
    }

}
