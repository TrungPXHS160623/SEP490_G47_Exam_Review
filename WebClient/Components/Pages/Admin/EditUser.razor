@page "/edituser/{UserId:int}"
@inject IAccountService accountService
@inject NavigationManager NavigationManager

<h3>Edit User</h3>

@if (user == null)
{
    <p>Loading user details...</p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <div>
            <label>Email:</label>
            <InputText @bind-Value="user.Mail" />
        </div>
        <div>
            <label>Role:</label>
            <MudSelect @bind-Value="user.UserRole.RoleId"
                       Text="user.UserRole.RoleName"
                       Variant="Variant.Outlined"
                       Label="Subject"
                       Margin="Margin.Dense"
                       Clearable
                       AnchorOrigin="Origin.BottomCenter"
                       Class="me-4">
                <MudSelectItem Value="1">Head of Department</MudSelectItem>
                <MudSelectItem Value="2">Lecturer</MudSelectItem>
                <MudSelectItem Value="3">Examiner</MudSelectItem>
                <MudSelectItem Value="4">Curriculum Developer</MudSelectItem>
                <MudSelectItem Value="5">Customer</MudSelectItem>
            </MudSelect>
        </div>
        <div>
            <label>Campus:</label>
            <MudSelect @bind-Value="user.Campus.CampusId"
                       Text="user.Campus.CampusName"
                       Variant="Variant.Outlined"
                       Label="Subject"
                       Margin="Margin.Dense"
                       Clearable
                       AnchorOrigin="Origin.BottomCenter"
                       Class="me-4">
                <MudSelectItem Value="1">Hoa Lac</MudSelectItem>
                <MudSelectItem Value="2">Ho Chi Minh</MudSelectItem>
                <MudSelectItem Value="3">Da Nang </MudSelectItem>
                <MudSelectItem Value="4">Can Tho</MudSelectItem>
                <MudSelectItem Value="5">Quy Nhon</MudSelectItem>
            </MudSelect>
        </div>
        <div>
            <label>Active:</label>
            <InputCheckbox @bind-Value="user.IsActive" />
        </div>
        <button type="submit" class="btn btn-primary">Update User</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
}

@code {
    [Parameter] public int UserId { get; set; }
    private User? user;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await FetchUserDetails();
    }

    private async Task FetchUserDetails()
    {
        try
        {
            var result = await accountService.GetByIdAsync(UserId);
            if (result != null)
            {
                user = result.Item;
            }
            else
            {
                errorMessage = "User not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching user details: {ex.Message}";
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await accountService.UpdateAsync(user);
            if (result.IsSuccessful)
            {
                NavigationManager.NavigateTo("/usermanagement");
            }
            else
            {
                errorMessage = "Update failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error updating user: {ex.Message}";
        }
    }
}
