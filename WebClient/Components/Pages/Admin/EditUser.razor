@page "/edituser/{UserId:int}"
@inject IAccountService accountService
@inject NavigationManager NavigationManager

<h3>Edit User</h3>

@if (user != null)
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <div>
            <label>Email:</label>
            <InputText @bind-Value="user.Mail" />
        </div>
        <div>
            <label>Role:</label>
            <InputText @bind-Value="user.UserRole.RoleName" />
        </div>

        <div>
            <label>Campus:</label>
            <InputText @bind-Value="user.Campus.CampusName" />
        </div>
        <div>
            <label>Active:</label>
            <InputCheckbox @bind-Value="user.IsActive" />
        </div>
        <button type="submit" class="btn btn-primary">Update User</button>
    </EditForm>
}
else
{
    <p>Loading user details...</p>
}

@code {
    [Parameter] public int UserId { get; set; }
    private User user = new User();

    protected override async Task OnInitializedAsync()
    {
        await FetchUserDetails();
    }

    private async Task FetchUserDetails()
    {
        var result = await accountService.GetByIdAsync(UserId);
        if (result != null)
        {
            user = result.Item;
        }
    }

    private async Task HandleValidSubmit()
    {
        var result = await accountService.UpdateAsync(UserId, user);
        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/usermanagement");
        }
        else
        {
        }
    }
}
