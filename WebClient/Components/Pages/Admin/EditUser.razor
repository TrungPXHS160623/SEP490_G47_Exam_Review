@page "/edituser/{UserId:int?}"
@inject IAccountService accountService
@inject NavigationManager NavigationManager

@if (user == null)
{
    <p>Loading user details...</p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <div>
            <label>Email:</label>
            <InputText @bind-Value="user.Mail" />
        </div>
        <div>
            <label>Role:</label>
            <InputText @bind-Value="user.UserRole.RoleName" />
        </div>
        <div>
            <label>Campus:</label>
            <InputText @bind-Value="user.Campus.CampusName" />
        </div>
        <div>
            <label>Active:</label>
            <InputCheckbox @bind-Value="user.IsActive" />
        </div>
        <button type="submit" class="btn btn-primary">Update User</button>
    </EditForm>

}

@code {
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    [Parameter] 
    public int? UserId { get; set; }
    private User? user;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        var isAuthenticated = await CustomAuthStateProvider.IsUserAuthenticated();

        if (isAuthenticated)
        {
            if(UserId != null)
            {
                await FetchUserDetails();
            }
        }

        if (Layout != null)
        {
            Layout.Header = "Home";
            Layout.HeaderLink = "/Home";
            Layout.SubHeader = UserId != null ? "Edit User" : "Add User";
            Layout.RefreshLayout();
        }
    }

    private async Task FetchUserDetails()
    {
        var result = await accountService.GetByIdAsync(UserId.Value);
        if (result != null)
        {
            user = result.Item;
        }
    }

    private async Task HandleValidSubmit()
    {
        RequestResponse resp = new();
        if(UserId != null)
        {
            resp = await accountService.UpdateAsync(UserId.Value, user);
        }else
        {
            // resp = await accountService.UpdateAsync(UserId.Value, user);
        }
        if (resp.IsSuccessful)
        {
            NavigationManager.NavigateTo("/usermanagement");
        }
    }
}
