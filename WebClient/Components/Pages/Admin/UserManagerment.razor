@page "/usermanagement"
@inject IAccountService accountService
@inject NavigationManager NavigationManager
<h3>User Management</h3>

<div>
    <input type="text" @bind="searchText" placeholder="Search users" />
    <button class="btn btn-primary" @onclick="FetchUsers">Search</button>
    <button class="btn btn-success" @onclick="AddNewUser">Add New User</button>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Email</th>
            <th>Is Active</th>
            <th>Role</th>
            <th>Campus</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (users != null)
        {
            @foreach (var user in users)
            {
                <tr @onclick="() => ViewUserDetail(user.UserId)" style="cursor:pointer;">

                    <td>@user.Mail</td>
                    <td>@user.IsActive</td>
                    <td>@user.UserRole?.RoleName</td>
                    <td>@user.Campus?.CampusName</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditUser(user.UserId)">Update</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<User> users;
    private string searchText;

    protected override async Task OnInitializedAsync()
    {
        await FetchUsers();
    }

    private async Task FetchUsers()
    {
        // Check if there is search text to filter
        if (!string.IsNullOrWhiteSpace(searchText))
        {
            var response = await accountService.GetAllWithFilterAsync("Mail", searchText);
            if (response.IsSuccessful)
            {
                users = response.Items;
            }
        }
        else
        {
            var response = await accountService.GetAllUserList();
            if (response.IsSuccessful)
            {
                users = response.Items;
            }
        }
    }

    private void EditUser(int UserId)
    {
        NavigationManager.NavigateTo($"/edituser/{UserId}");
    }
    private void AddNewUser()
    {
        // Redirect to a page or modal for adding a new user
    }

   
    private void ViewUserDetail(int userId)
    {
        NavigationManager.NavigateTo($"/userdetails/{userId}");
    }
   
}
